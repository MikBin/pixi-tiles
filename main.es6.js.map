{"version":3,"file":"main.es6.js","sources":["src/interfaces.ts","src/PixiTile.ts","src/torusViewFactory.ts","src/index.ts"],"sourcesContent":["import { PixiTile } from \"./PixiTile\";\n\nexport enum directionFB { forward = 1, backward = -1 };\n\nexport interface animationData {\n    totalSteps: number;\n    currentStep: number;\n};\n\nexport interface slideData extends animationData {\n    slideAmountX: number;\n    slideAmountY: number;\n    objectToMove: PIXI.Sprite | PIXI.Graphics | PIXI.RoundedRectangle;\n};\nexport interface textureBasedAnimationData extends animationData {\n    texturesList: PIXI.Texture[];\n    direction: directionFB;\n    _index: number;\n};\nexport interface tintAnimationData extends animationData {\n    tintStep_RED: number;\n    tintStep_GREEN: number;\n    tintStep_BLUE: number;\n    endTint: number;\n    objectToAnimate: PIXI.Sprite | PIXI.Graphics | PIXI.RoundedRectangle;\n};\nexport interface doubleGraphicsAnimation extends animationData {\n    borderRadiusStep: number;\n    currentRadius: number;\n    textSizeStep: number;\n    strokeThicknessStep: number;\n}\n\nexport interface canvasSizes {\n    width: number;\n    height: number;\n};\n\n\nexport interface moveAndAnimateData {\n    stepsBase: number;\n    latestTimeDeltaRecord: number;\n    slidesEMAalpha: number;\n    stepsCounter: number;\n    animationTiming: number;\n    slideChangeThreshold: number;\n};\nexport interface graphicsConfiguration {\n    marginPercent: number;\n    fontSizePercent: number;\n    doubleFontSizePercent: number;\n    borderPercent: number;\n    doubleBorderPercent: number;\n    _16_9_MOD: number;\n    containerHeightModifier: number;\n    sizeNormalizer: number;\n    rows?: number;\n    cols?: number;\n    tileSize?: number;\n    tileFullSize?: number;\n    sourceTileTextureSize: number;\n    fontSize: number;\n    biggerFontSize: number;\n    tileBackColor: number;\n    defaultAlpha: number;\n    strokeThicknessBase: number;\n    strokeThicknessDouble: number;\n    roundBorderFactor: number;\n    doubleBorderFactor: number;\n    tileNumberColors: number[];\n    tileNumberBackColors: number[];\n    negativeNumberColor: number;\n    negativeBackNumberColor: number;\n    animationSteps: number;\n    stepsFor_60_FPS: number;\n    stepsLimit: number;\n    margins: number;\n    animationTiming?: number;\n    slideChangeThreshold?: number;\n}\n\nexport enum WEIGHTS { zero = 0, one = 1, double = 2 };","import { slideData, doubleGraphicsAnimation, textureBasedAnimationData, directionFB } from \"./interfaces\";\nimport { tintAnimationData, WEIGHTS } from \"./interfaces\";\nimport { graphicsConfiguration } from \"./interfaces\";\nimport { Graphics, GraphicsData, Point } from \"pixi.js\";\nimport { GlowFilter } from \"pixi-filters\";\n\n// @ts-ignore\n//const __filters = window.__filters;\n\nenum mainGraphicType { Graphics, Sprite };\nconst startGlowFilterValues: number[] = [0, 0, 0, 0xFFFFFF, 0.1];\n\nclass PixiTile {\n    private _GRAPHICS_OBJECT: PIXI.RoundedRectangle | PIXI.Graphics;\n    private _SPRITE_OBJECT: PIXI.Sprite;\n    private _SLIDE_DATA: slideData;\n    private _GRAPHICS_ANIMATE_DATA: doubleGraphicsAnimation;\n    private _TINT_ANIMATION_DATA: tintAnimationData;\n    private _TEXTURE_ANIMATION_DATA: textureBasedAnimationData;\n    private _WEIGHT_CHANGE_ANIMATION_FN: Function;\n    private graphicsType: mainGraphicType;\n    private doubleValueFilter: GlowFilter;\n    /**integer coordinates relative to rowsXcols grid size  --> independent of canvas size */\n    private absX: number;\n    private absY: number;\n    private _weight: WEIGHTS;\n    private _row: number;\n    private _col: number;\n    private weightChangeCode: string;\n    private weightChangeAnimationCode: number;\n    private scaleFactor: number;\n\n    constructor(private globalConfig: graphicsConfiguration, private APP: PIXI.Application, private _TEXTURES_LIST: PIXI.Texture[], private _ANIMATION_TEXTURES: Object, private _value: number | string = 0, forceSprite: boolean = false) {\n\n        this.graphicsType = mainGraphicType.Sprite;\n        if (!forceSprite) {\n            this._GRAPHICS_OBJECT = PixiTile.createTileAsGraphics(globalConfig, _value);\n        }\n        this.scaleFactor = globalConfig.tileFullSize / globalConfig.sourceTileTextureSize;\n        this._SPRITE_OBJECT = new PIXI.Sprite(_TEXTURES_LIST[_value as number]);\n        this._SPRITE_OBJECT.scale = { x: this.scaleFactor, y: this.scaleFactor } as Point;\n        this._SLIDE_DATA = { currentStep: 0, slideAmountX: 0, slideAmountY: 0, totalSteps: 0, objectToMove: this._SPRITE_OBJECT };\n        this._TINT_ANIMATION_DATA = { currentStep: 0, totalSteps: 0, tintStep_RED: 0, tintStep_BLUE: 0, tintStep_GREEN: 0, endTint: 0, objectToAnimate: this._SPRITE_OBJECT };\n        this._GRAPHICS_ANIMATE_DATA = { currentStep: 0, totalSteps: 0, textSizeStep: 0, strokeThicknessStep: 0, borderRadiusStep: 0, currentRadius: globalConfig.roundBorderFactor };\n        this._TEXTURE_ANIMATION_DATA = { currentStep: 0, totalSteps: 0, texturesList: [], direction: directionFB.forward, _index: 0 };\n        this._weight = WEIGHTS.zero;\n        this._row = 0;\n        this._col = 0;\n        this.weightChangeAnimationCode = 0;\n        this.weightChangeCode = \"00\";\n        this._WEIGHT_CHANGE_ANIMATION_FN = () => { };\n\n        //this.doubleValueFilter = new GlowFilter();\n        // this._SPRITE_OBJECT.filters = [this.doubleValueFilter];\n\n    }\n    setSpriteScale() { };\n    setSpriteMode(): void {\n        this.graphicsType = mainGraphicType.Sprite;\n        this._SLIDE_DATA.objectToMove = this._SPRITE_OBJECT;\n    };\n    setGraphicsMode(): void {\n        this.graphicsType = mainGraphicType.Graphics;\n        this._SLIDE_DATA.objectToMove = this._GRAPHICS_OBJECT;\n    };\n    createGraphics(): PixiTile {\n        this._GRAPHICS_OBJECT = PixiTile.createTileAsGraphics(this.globalConfig, this._value);\n        return this;\n    };\n    moveTo(x: number, y: number): void {\n        let objectToMove = this._SLIDE_DATA.objectToMove = this.graphicsType === mainGraphicType.Graphics ? this._GRAPHICS_OBJECT : this._SPRITE_OBJECT;\n        objectToMove.x = x;\n        objectToMove.y = y;\n    };\n    prepareFilterAnimation() { };\n    resetFilterAnimation() { };\n    slideOfPrepareFn(x: number, y: number, steps: number): void {\n        this._SLIDE_DATA.currentStep = 0;\n        this._SLIDE_DATA.totalSteps = steps;\n        this._SLIDE_DATA.slideAmountX = x / steps; /// this.globalConfig.tileFullSize;\n        this._SLIDE_DATA.slideAmountY = y / steps; /// this.globalConfig.tileFullSize;\n        this._SLIDE_DATA.objectToMove = this.graphicsType === mainGraphicType.Graphics ? this._GRAPHICS_OBJECT : this._SPRITE_OBJECT;\n\n    };\n    slideOf_percent_PrepareFn(x: number, y: number, steps: number): void {\n        /**call slideOfPrepare */\n        return this.slideOfPrepareFn(x * this.globalConfig.tileFullSize, y * this.globalConfig.tileFullSize, steps);\n    };\n    slideToPrepareFn(x: number, y: number, steps: number): void {\n        /**call slideOfPrepare */\n    };\n    slideStep(): number {\n        let _SLIDE_DATA = this._SLIDE_DATA;\n        if (_SLIDE_DATA.currentStep === _SLIDE_DATA.totalSteps) {\n            //resetHere?\n            return 0;\n        }\n        _SLIDE_DATA.currentStep++;\n        let objectToMove = _SLIDE_DATA.objectToMove;\n        objectToMove.x += _SLIDE_DATA.slideAmountX;\n        objectToMove.y += _SLIDE_DATA.slideAmountY;\n        return _SLIDE_DATA.currentStep;\n    };\n    resetSlideData(): PixiTile {\n        this._SLIDE_DATA.currentStep = 0;\n        this._SLIDE_DATA.totalSteps = 0;\n        this._SLIDE_DATA.slideAmountX = 0;\n        this._SLIDE_DATA.slideAmountY = 0;\n        return this;\n    };\n    resetAllAnimationsData(): PixiTile {\n        this._SLIDE_DATA.currentStep = 0;\n        this._SLIDE_DATA.totalSteps = 0;\n        this._SLIDE_DATA.slideAmountX = 0;\n        this._SLIDE_DATA.slideAmountY = 0;\n        this._TINT_ANIMATION_DATA.currentStep = 0;\n        this._TINT_ANIMATION_DATA.totalSteps = 0;\n        this._TINT_ANIMATION_DATA.tintStep_BLUE = 0;\n        this._TINT_ANIMATION_DATA.tintStep_GREEN = 0;\n        this._TINT_ANIMATION_DATA.tintStep_RED = 0;\n        this._TEXTURE_ANIMATION_DATA.totalSteps = 0;\n        this._TEXTURE_ANIMATION_DATA.direction = directionFB.forward;\n        this._TEXTURE_ANIMATION_DATA._index = 0;\n        this._TEXTURE_ANIMATION_DATA.currentStep = 0;\n\n        //TODO reset texture ones\n        return this;\n    };\n    setOutside(): void {\n        this.faceValue = 0;\n        this._weight = 0;\n        this.weightChangeCode = \"00\";\n    };\n    set faceValue(v: number | string) {\n        /**depending on graphicsType change one of the two */\n        this._value = v;\n        if (this.graphicsType === mainGraphicType.Sprite) {\n            this._SPRITE_OBJECT.texture = this._TEXTURES_LIST[this._value as number];\n            /**tint to be reset too */\n            this._SPRITE_OBJECT.tint = this.globalConfig.tileBackColor;\n        } else {\n\n            let numberElement = (<PIXI.Graphics>this._GRAPHICS_OBJECT).children[0] as PIXI.Text;\n\n            if (v !== 0) {\n                numberElement.text = `${v}`;\n                numberElement.style.fill = v > 0 ? this.globalConfig.tileNumberColors[v] : this.globalConfig.negativeNumberColor;\n                numberElement.style.fontSize = this.globalConfig.fontSize;\n                numberElement.style.strokeThickness = this.globalConfig.strokeThicknessBase;\n            } else {\n                numberElement.text = '';\n            }\n\n        }\n    };\n    get faceValue(): number | string {\n        return this._value;\n    };\n    set row(r: number) { this._row = r; };\n    set col(c: number) { this._col = c; };\n    get row() { return this._row; };\n    get col() { return this._col; };\n    positionByRowAndCol(): void {\n        let objectToMove = this._SLIDE_DATA.objectToMove = this.graphicsType === mainGraphicType.Graphics ? this._GRAPHICS_OBJECT : this._SPRITE_OBJECT;\n        let r = this._row;\n        let c = this._col;\n        let cellSize = this.globalConfig.tileSize;\n        let margins = this.globalConfig.margins;\n        objectToMove.x = c * cellSize + (2 * c + 1) * margins;\n        objectToMove.y = r * cellSize + (2 * r + 1) * margins;\n    };\n    set X(x: number) {\n        this.absX = x;\n\n    };\n    set Y(y: number) {\n        this.absY = y;\n    };\n    get weight() {\n        return this._weight;\n    };\n    set weight(w: WEIGHTS) {\n        //console.log(`setting W: ${this._weight} --> ${w}   value: ${this._value}  rc: ${this.row}-${this.col}`);\n        if (w === null) {\n            w = WEIGHTS.zero;\n        }\n        this.weightChangeCode = `${this._weight}${w}`;//reset to zero when animation is done\n        this._weight = w;\n    };\n    setWeight(w: WEIGHTS) { };\n    getGraphics(): PIXI.Sprite | PIXI.Graphics | PIXI.RoundedRectangle {\n        return this._GRAPHICS_OBJECT;\n    };\n    getSprite(): PIXI.Sprite {\n        return this._SPRITE_OBJECT;\n    };\n    getObjectToUse(): PIXI.Sprite | PIXI.Graphics | PIXI.RoundedRectangle {\n        return this.graphicsType === mainGraphicType.Graphics ? this._GRAPHICS_OBJECT : this._SPRITE_OBJECT;\n    };\n    setGraphicsFaceValue() { };\n    setSpriteFaceValue() { };\n    getBackTint(): number {\n        if (this._value > 0) {\n            return this.globalConfig.tileNumberBackColors[this._value];\n        } else if (this._value < 0) {\n            return this.globalConfig.negativeNumberColor;\n        } else {\n            return this.globalConfig.tileBackColor;\n        }\n    };\n    prepareWeightChangeAnimationFn(steps: number): boolean {\n        if (this._value === null) {\n            return false;\n        }\n        let weightChangeCode = this.weightChangeCode;\n        this.weightChangeCode = \"00\";\n        if (weightChangeCode == \"00\" || weightChangeCode == \"11\" || weightChangeCode == \"22\") {\n            //console.log(\"NO-WCAC: \", this.row, this.col, this.faceValue, this.weightChangeAnimationCode, this.weightChangeCode);\n            return false;\n        } else if (weightChangeCode == \"01\") {\n            this.prepareAnimateTint(this.getBackTint(), steps);\n            this.weightChangeAnimationCode = 1;\n        } else if (weightChangeCode == \"02\") {\n            this.prepareAnimateTint(this.getBackTint(), steps);\n            this.preapreAnimateDouble(steps, directionFB.forward);\n            this.weightChangeAnimationCode = 3;\n\n        } else if (weightChangeCode == \"10\") {\n            this.prepareAnimateTint(this.globalConfig.tileBackColor, steps);\n            this.weightChangeAnimationCode = 1;\n        } else if (weightChangeCode == \"12\") {\n            this.preapreAnimateDouble(steps, directionFB.forward);\n            this.weightChangeAnimationCode = 2;\n        } else if (weightChangeCode == \"20\") {\n            this.preapreAnimateDouble(steps, directionFB.backward);\n            this.prepareAnimateTint(this.globalConfig.tileBackColor, steps);\n            this.weightChangeAnimationCode = 3;\n        } else if (weightChangeCode == \"21\") {\n            this.preapreAnimateDouble(steps, directionFB.backward);\n            this.weightChangeAnimationCode = 2;\n        }\n        //console.log(\"WCAC: \", this.row, this.col, this.faceValue, this.weightChangeAnimationCode, this.weightChangeCode);\n        return true;\n    };\n    callWeightChangeAnimationStep() {\n        let weightChangeAnimationCode = this.weightChangeAnimationCode;\n        let res = 0;\n\n        if ((weightChangeAnimationCode & 1) == 1) {\n            res = this.animateTintStep();\n        }\n        if ((weightChangeAnimationCode & 2) == 2) {\n            res = this.stepAnimateDouble();\n\n        }\n        return res;\n\n    };\n    preapreAnimateDouble(steps: number, dir: directionFB): void {\n        // console.log(this._value, this.faceValue, this.col, this.row, this._ANIMATION_TEXTURES[steps][this._value]);\n        this._TEXTURE_ANIMATION_DATA.totalSteps = steps;\n        this._TEXTURE_ANIMATION_DATA.direction = dir;\n        this._TEXTURE_ANIMATION_DATA._index = dir === directionFB.forward ? 0 : steps - 1;\n        this._TEXTURE_ANIMATION_DATA.currentStep = 0;\n        this._TEXTURE_ANIMATION_DATA.texturesList = this._ANIMATION_TEXTURES[steps][this._value];\n\n\n    };\n    stepAnimateDouble(): number {\n\n        let _TEXTURE_ANIMATION_DATA = this._TEXTURE_ANIMATION_DATA;\n        if (_TEXTURE_ANIMATION_DATA.currentStep == _TEXTURE_ANIMATION_DATA.totalSteps) {\n            return _TEXTURE_ANIMATION_DATA.totalSteps;\n        }\n\n        this._SPRITE_OBJECT.texture = _TEXTURE_ANIMATION_DATA.texturesList[_TEXTURE_ANIMATION_DATA._index];\n\n        _TEXTURE_ANIMATION_DATA._index += _TEXTURE_ANIMATION_DATA.direction;\n        _TEXTURE_ANIMATION_DATA.currentStep++;\n        return _TEXTURE_ANIMATION_DATA.currentStep;\n    };\n    prepareAnimateTint(tint: number, steps: number): void {\n\n        let graphicsData = this._TINT_ANIMATION_DATA.objectToAnimate = this.graphicsType === mainGraphicType.Graphics ? this._GRAPHICS_OBJECT : this._SPRITE_OBJECT;\n        this._TINT_ANIMATION_DATA.currentStep = 0;\n        this._TINT_ANIMATION_DATA.totalSteps = steps;\n        let fillColor: number = (<PIXI.Graphics>graphicsData).tint;\n        let r = (fillColor & 0xFF0000) >> 16;\n        let g = (fillColor & 0x00FF00) >> 8;\n        let b = fillColor & 0x0000FF;\n        let tr = (tint & 0xFF0000) >> 16;\n        let tg = (tint & 0x00FF00) >> 8;\n        let tb = tint & 0x0000FF;\n\n        this._TINT_ANIMATION_DATA.tintStep_RED = (tr - r) / steps;\n        this._TINT_ANIMATION_DATA.tintStep_GREEN = (tg - g) / steps;\n        this._TINT_ANIMATION_DATA.tintStep_BLUE = (tb - b) / steps;\n        this._TINT_ANIMATION_DATA.endTint = tint;\n    };\n    animateTintStep(): number {\n\n        let _TINT_ANIMATION_DATA = this._TINT_ANIMATION_DATA;\n        let objectToAnimate = _TINT_ANIMATION_DATA.objectToAnimate;\n        if (_TINT_ANIMATION_DATA.currentStep === _TINT_ANIMATION_DATA.totalSteps - 1) {\n            // console.log(\"end animation tint\", this._value, this._col, this._row);\n            (<PIXI.Graphics>objectToAnimate).tint = _TINT_ANIMATION_DATA.endTint;\n            return 0;\n        }\n        _TINT_ANIMATION_DATA.currentStep++;\n\n\n        let paintTint: number =\n            (_TINT_ANIMATION_DATA.tintStep_RED << 16) + (_TINT_ANIMATION_DATA.tintStep_GREEN << 8) + _TINT_ANIMATION_DATA.tintStep_BLUE;\n\n        (<PIXI.Graphics>objectToAnimate).tint += paintTint;\n\n        return _TINT_ANIMATION_DATA.currentStep;\n    };\n    _resetBorderAndTextGraphics() {\n        /**graphics mode only */\n        let _GRAPHICS_OBJECT = this._GRAPHICS_OBJECT as PIXI.Graphics;\n        this.faceValue = this._value;\n        _GRAPHICS_OBJECT.clear();\n        _GRAPHICS_OBJECT.beginFill(this.globalConfig.tileBackColor, this.globalConfig.defaultAlpha);\n        _GRAPHICS_OBJECT.drawRoundedRect(0, 0, this.globalConfig.tileSize, this.globalConfig.tileSize, this.globalConfig.roundBorderFactor);\n        _GRAPHICS_OBJECT.endFill();\n    };\n    _prepareAnimateBorderTextGraphics(steps: number): void {\n        /**used for prerendering textures only */\n        let _GRAPHICS_OBJECT = this._GRAPHICS_OBJECT;\n        let text: PIXI.Text = (<PIXI.Graphics>_GRAPHICS_OBJECT).children[0] as PIXI.Text;\n        let textStyle: PIXI.TextStyle = text.style;\n        let fontSize: number | string = textStyle.fontSize as number;\n        let _GRAPHICS_ANIMATE_DATA = this._GRAPHICS_ANIMATE_DATA;\n        _GRAPHICS_ANIMATE_DATA.currentStep = 0;\n        _GRAPHICS_ANIMATE_DATA.totalSteps = steps;\n        _GRAPHICS_ANIMATE_DATA.borderRadiusStep = (this.globalConfig.doubleBorderFactor - this.globalConfig.roundBorderFactor) / steps;\n        _GRAPHICS_ANIMATE_DATA.strokeThicknessStep = (this.globalConfig.strokeThicknessDouble - textStyle.strokeThickness) / steps;\n        _GRAPHICS_ANIMATE_DATA.textSizeStep = (this.globalConfig.biggerFontSize - fontSize) / steps;\n    };\n    _animateBorderTextStep(): number {\n        /**used for prerendering textures only */\n        let _GRAPHICS_ANIMATE_DATA = this._GRAPHICS_ANIMATE_DATA;\n        if (_GRAPHICS_ANIMATE_DATA.currentStep === _GRAPHICS_ANIMATE_DATA.totalSteps) {\n            return 0;\n        }\n        let _GRAPHICS_OBJECT = this._GRAPHICS_OBJECT as PIXI.Graphics;\n        let text: PIXI.Text = (<PIXI.Graphics>_GRAPHICS_OBJECT).children[0] as PIXI.Text;\n        let textStyle: PIXI.TextStyle = text.style;\n        let fontSize: number | string = textStyle.fontSize as number;\n        let rad = (<PIXI.RoundedRectangle>this._GRAPHICS_OBJECT).radius;\n        let h: number = this.globalConfig.tileSize;\n        let w: number = this.globalConfig.tileSize;\n        let alpha: number = this.globalConfig.defaultAlpha;\n        let color: number = this.globalConfig.tileBackColor;\n        _GRAPHICS_ANIMATE_DATA.currentStep++;\n        fontSize += _GRAPHICS_ANIMATE_DATA.textSizeStep;\n        textStyle.fontSize = fontSize;\n        textStyle.strokeThickness += _GRAPHICS_ANIMATE_DATA.strokeThicknessStep;\n        _GRAPHICS_ANIMATE_DATA.currentRadius += _GRAPHICS_ANIMATE_DATA.borderRadiusStep;\n        _GRAPHICS_OBJECT.clear();\n        _GRAPHICS_OBJECT.beginFill(color, alpha);\n        _GRAPHICS_OBJECT.drawRoundedRect(0, 0, h, w, _GRAPHICS_ANIMATE_DATA.currentRadius);\n        _GRAPHICS_OBJECT.endFill();\n        return _GRAPHICS_ANIMATE_DATA.currentStep;\n    };\n\n\n    static createTileAsGraphics(_CONF: graphicsConfiguration, val: number | string | null, forcedSize?: number) {\n\n        let aTile: PIXI.RoundedRectangle | PIXI.Graphics = new PIXI.Graphics();\n\n        aTile.beginFill(_CONF.tileBackColor, _CONF.defaultAlpha);\n\n        aTile.drawRoundedRect(0, 0, forcedSize || _CONF.tileSize, _CONF.tileSize, _CONF.roundBorderFactor);\n        aTile.endFill();\n        aTile.interactiveChildren = false;\n\n        if (val !== 0 && val !== null) {\n            let cellNumber: number | string | null = '';\n            cellNumber = val;\n            let textColor: number = cellNumber > 0 ? _CONF.tileNumberColors[cellNumber as number] : _CONF.negativeNumberColor;\n\n\n            let number: PIXI.Text = new PIXI.Text(`${cellNumber}`, {\n                fontWeight: 'bold',\n                fontSize: _CONF.fontSize,\n                fontFamily: 'Roboto',\n                fill: textColor,\n                align: 'center'\n            });\n\n            number.x = aTile.width / 2;\n            number.y = aTile.height / 2;\n            number.anchor.set(0.5, 0.5);\n            aTile.addChild(number);\n        }\n\n        return aTile;\n    };\n}\n\n\nexport { PixiTile };","declare var gridModel: any; //dereferncing external non typescript libraries\nimport * as PIXI from 'pixi.js';\nimport { graphicsConfiguration, moveAndAnimateData, canvasSizes } from \"./interfaces\";\nimport { PixiTile } from \"./PixiTile\";\n\nconst SLIDE_LEFT: number = 1,\n    SLIDE_RIGHT: number = 0,\n    SLIDE_UP: number = 2,\n    SLIDE_DOWN: number = 3;\n\nconst directionNames = [\"right\", \"left\", \"up\", \"down\"];\n\nconst getCanvasSize = (tileSize: number, torusModel): canvasSizes => {\n    console.log(tileSize, torusModel.rows, torusModel.cols);\n    return {\n        width: tileSize * torusModel.cols,\n        height: tileSize * torusModel.rows\n    }\n};\n\nconst getTileSize = (containerHeight: number, containerWidth: number, torusModel, normalizer: number): number => {\n\n    let fullTileSize = 0;\n    if (torusModel.rows > torusModel.cols) {\n        fullTileSize = containerHeight / (normalizer * torusModel.rows);\n    } else {\n        fullTileSize = containerWidth / (normalizer * torusModel.cols);\n    }\n    return fullTileSize;\n};\n\nconst getSegmentSlopeDirection = (Xa, Xb, Ya, Yb) => {\n    /*0 left 1 right 2 up 3 down*/\n\n    let deltaX = Xa - Xb;\n    let deltaY = Ya - Yb;\n    let delta = (Ya - Yb) / (Xa - Xb);\n    let absDelta = Math.abs(delta);\n    if (absDelta < 1) {\n        /*horizontal slide*/\n        if (Math.abs(Xa - Xb) < 20) {\n            return -1;\n        }\n        return deltaX > 0 ? SLIDE_LEFT : SLIDE_RIGHT;\n    } else {\n        /*vertical slide*/\n        if (Math.abs(Ya - Yb) < 20) {\n            return -1;\n        }\n        return deltaY > 0 ? SLIDE_UP : SLIDE_DOWN;\n    }\n};\nconst getRowToSlide = (Ya, Yb, tileFullSize) => {\n\n    let Y = (Ya + Yb) / 2;\n    return Math.floor(Y / tileFullSize);\n};\nconst getColToSlide = (Xa, Xb, tileFullSize) => {\n    let X = (Xa + Xb) / 2;\n    return Math.floor(X / tileFullSize);\n};\n\nconst buildMask = (torusMatrix, pixiMaskObject: PIXI.Graphics, conf: graphicsConfiguration): void => {\n    let cellSize = conf.tileSize + 2 * conf.margins;\n    pixiMaskObject.beginFill(0xFFFFFF, 1);\n    torusMatrix.forEach((row, r) => {\n        row.forEach((cell, c) => {\n            if (cell !== null) {\n                pixiMaskObject.drawRect(c * cellSize, r * cellSize, cellSize,\n                    cellSize);\n            }\n        });\n    });\n    pixiMaskObject.endFill();\n};\n\n\n\nexport const MAIN_GRAPHICS_CONFIG: graphicsConfiguration = {\n    marginPercent: 0.01,\n    fontSizePercent: 0.6,\n    doubleFontSizePercent: 0.7,\n    borderPercent: 0.12,\n    doubleBorderPercent: 0.40,\n    _16_9_MOD: 0.6,\n    containerHeightModifier: 0.6,\n    sizeNormalizer: 1.04,\n    fontSize: 0,\n    biggerFontSize: 0,\n    tileBackColor: 0xFAFAFA,\n    defaultAlpha: 1,\n    strokeThicknessBase: 0,\n    strokeThicknessDouble: 0,\n    roundBorderFactor: 0,\n    doubleBorderFactor: 0,\n    tileFullSize: 0,\n    tileSize: 0,\n    sourceTileTextureSize: 262,\n    tileNumberColors: [0xFAFAFA, 0x311B92, 0x0D47A1, 0x880E4F, 0x006064, 0xFF4500, 0x8B0000,\n        0x4B0082, 0x006400, 0x2F4F4F\n    ],\n    tileNumberBackColors: [0x0FAFAFA, 0x9781F8, 0x73ADFF, 0xEE74B5, 0x00dae4, 0xFFDE99,\n        0xff0c0c, 0x9403ff, 0x00e400, 0x95B5B5\n    ],\n    negativeNumberColor: 0x696969,\n    negativeBackNumberColor: 0xCCCCCC,\n    animationSteps: 12,\n    stepsFor_60_FPS: 12,\n    stepsLimit: 12,\n    margins: 0,\n    animationTiming: 200,\n    slideChangeThreshold: 20\n};\n\nconst TEXTURES_GLOBAL = {\n    ANIMATION_TEXTURES: null,\n    TILE_TEXTURES: null\n};\n\n\n\nexport class TorusViewFactory {\n    private TILE_TEXTURES_LIST: PIXI.Texture[];\n    private ANIMATION_TEXTURES_LIST: Object;\n    private canvasSizes: canvasSizes;\n    private SEMAPHORES: {\n        slide: boolean,\n        slideAnimationFPSset: boolean\n    };\n    private startingGrid: number[][];\n    private PIXI_APP: PIXI.Application;\n    private ticker: any;\n    private torusContainer: PIXI.Container;\n    private mask: PIXI.Graphics;\n    private lastPointerDown: {\n        x: number;\n        y: number;\n    };\n    private tilesMap: Object;\n    private slideEndCode: string;\n    constructor(private torus, private canvasContainer: HTMLElement, private _configuration: graphicsConfiguration = Object.assign({}, MAIN_GRAPHICS_CONFIG), private playSlideSound: Function = () => { }, private publishScore: Function = () => { }) {\n\n        if (_configuration.tileFullSize === 0) {\n            let w = window.innerWidth;\n            let h = window.innerHeight;\n            if (w > h) {\n                w = _configuration._16_9_MOD * h;\n            } else {\n                h = h * _configuration.containerHeightModifier;\n            }\n\n            w > h ? w = h : h = w;\n            _configuration.tileFullSize = getTileSize(h, w, torus, _configuration.sizeNormalizer);\n        }\n\n        this.lastPointerDown = {\n            x: 0,\n            y: 0\n        };\n        this.SEMAPHORES = {\n            slide: true,\n            slideAnimationFPSset: false\n        };\n        this.canvasSizes = getCanvasSize(_configuration.tileFullSize, torus);\n\n        const startingGrid = gridModel.fn.torusArrayToMatrix(torus);\n        this.startingGrid = startingGrid;\n        TorusViewFactory.setMainGraphicsConfig(_configuration.tileFullSize, _configuration);\n\n        this.slideEndCode = `SLIDE_END.${torus._id}`;\n        /**create PIXI app */\n        this.PIXI_APP = new PIXI.Application(this.canvasSizes.width, this.canvasSizes.height, {\n            antialias: true,\n            transparent: true,\n            autoResize: true\n        });\n\n        this.TILE_TEXTURES_LIST = TEXTURES_GLOBAL.TILE_TEXTURES;//TorusViewFactory.buildTilesTexturesList(this.PIXI_APP.renderer, _configuration);\n        this.ANIMATION_TEXTURES_LIST = TEXTURES_GLOBAL.ANIMATION_TEXTURES; //TorusViewFactory.buildAnimationTexturesList(this.PIXI_APP, _configuration);\n\n        canvasContainer.appendChild(this.PIXI_APP.view);\n\n        const torusContainer: PIXI.Container = this.torusContainer = new PIXI.Container();\n\n        this.PIXI_APP.stage.addChild(torusContainer);\n        torusContainer.x = 0;\n        torusContainer.y = 0;\n\n        torusContainer.interactiveChildren = false;\n\n        this.PIXI_APP.stage.interactive = true;\n\n        /**MASK */\n        const mainMask = this.mask = new PIXI.Graphics();\n        mainMask.x = 0;\n        mainMask.y = 0;\n\n\n        /**add layer for swipe animation capturing  */\n        const layer = new PIXI.Graphics();\n        this.PIXI_APP.stage.addChild(layer);\n        layer.x = 0;\n        layer.y = 0;\n        layer.beginFill(0xFFFFFF, 0);\n        layer.drawRect(0, 0, this.canvasSizes.width, this.canvasSizes.height);\n        layer.endFill();\n\n\n        buildMask(startingGrid, mainMask, _configuration);\n        torusContainer.mask = mainMask;\n        this.tilesMap = {};\n        this.buildStartTiles();\n\n        /**bind events */\n        this.PIXI_APP.stage.on('pointerdown', this.onDown.bind(this));\n        this.PIXI_APP.stage.on('pointerup', this.onUp.bind(this));\n\n    };\n    onDown(e): void {\n        this.lastPointerDown.x = e.data.global.x;\n        this.lastPointerDown.y = e.data.global.y;\n    };\n    onUp(e) {\n        let direction = getSegmentSlopeDirection(this.lastPointerDown.x, e.data.global.x,\n            this.lastPointerDown.y, e.data.global.y);\n\n        if (direction === -1) {\n            return false;\n        }\n\n        if (!this.SEMAPHORES.slide) {\n\n            return false;\n        }\n\n        if (direction > 1) {\n            let colIdx = getColToSlide(e.data.global.x, this.lastPointerDown.x, this._configuration.tileFullSize);\n            /*column*/\n            this.playSlideSound();\n            this.slideColumn(colIdx, direction).then((res) => {\n\n                this.publishScore(this.slideEndCode, this.torus.getData());\n                let animations = this.syncColTilesWeights(colIdx);\n                this.runAnimationVector(animations, \"callWeightChangeAnimationStep\", this._configuration.animationSteps).then((res) => {\n                    this.SEMAPHORES.slide = true;\n                });\n\n\n            });\n\n        } else {\n            /*rows*/\n            let rowIdx = getRowToSlide(e.data.global.y, this.lastPointerDown.y, this._configuration.tileFullSize);\n            this.playSlideSound();\n            this.slideRow(rowIdx, direction).then((res) => {\n                this.publishScore(this.slideEndCode, this.torus.getData());\n                let animations = this.syncRowTilesWeights(rowIdx);\n                this.runAnimationVector(animations, \"callWeightChangeAnimationStep\", this._configuration.animationSteps).then((res) => {\n                    this.SEMAPHORES.slide = true;\n                });\n            });\n\n        }\n    };\n    syncTilesWeights(): PixiTile[] {\n        let tilesMap = this.tilesMap;\n        let torus = this.torus;\n        let rows = this.torus.rows;\n        let cols = this.torus.cols;\n        let animationsList: PixiTile[] = [];\n        for (let i = 0; i < rows; ++i) {\n            for (let j = 0; j < cols; ++j) {\n                let w = torus.getValueWeight(i, j);\n                let tile = tilesMap[i][j];\n                tile.weight = w;\n                if (tile.prepareWeightChangeAnimationFn(this._configuration.animationSteps)) {\n                    animationsList.push(tile);\n                }\n            }\n        }\n        return animationsList;\n    };\n    prepareTileWeightChange(tile: PixiTile, r: number, c: number): boolean {\n        let torus = this.torus;\n        let w = torus.getValueWeight(r, c);\n        tile.weight = w;\n        if (tile.prepareWeightChangeAnimationFn(this._configuration.animationSteps)) {\n            return true;\n        }\n        return false;\n    };\n    syncColTilesWeights(colIdx: number): PixiTile[] {\n        let animationsList: PixiTile[] = [];\n        let torus = this.torus;\n        let tilesMap = this.tilesMap;\n        let prevCol: number = colIdx > 0 ? colIdx - 1 : -1;\n        let nextCol: number = colIdx < torus.cols - 1 ? colIdx + 1 : -1;\n        for (let i = 0; i < torus.rows; ++i) {\n            if (this.prepareTileWeightChange(tilesMap[i][colIdx], i, colIdx)) {\n                animationsList.push(tilesMap[i][colIdx]);\n            }\n            if (prevCol > -1) {\n                if (this.prepareTileWeightChange(tilesMap[i][prevCol], i, prevCol)) {\n                    animationsList.push(tilesMap[i][prevCol]);\n                }\n            }\n            if (nextCol > -1) {\n                if (this.prepareTileWeightChange(tilesMap[i][nextCol], i, nextCol)) {\n                    animationsList.push(tilesMap[i][nextCol]);\n                }\n            }\n\n        }\n        return animationsList;\n    };\n    syncRowTilesWeights(rowIdx: number): PixiTile[] {\n        let animationsList: PixiTile[] = [];\n        let torus = this.torus;\n        let tilesMap = this.tilesMap;\n        let prevRow: number = rowIdx > 0 ? rowIdx - 1 : -1;\n        let nextRow: number = rowIdx < torus.rows - 1 ? rowIdx + 1 : -1;\n        for (let i = 0; i < torus.cols; ++i) {\n            if (this.prepareTileWeightChange(tilesMap[rowIdx][i], rowIdx, i)) {\n                animationsList.push(tilesMap[rowIdx][i]);\n            }\n            if (prevRow > -1) {\n                if (this.prepareTileWeightChange(tilesMap[prevRow][i], prevRow, i)) {\n                    animationsList.push(tilesMap[prevRow][i]);\n                }\n            }\n            if (nextRow > -1) {\n                if (this.prepareTileWeightChange(tilesMap[nextRow][i], nextRow, i)) {\n                    animationsList.push(tilesMap[nextRow][i]);\n                }\n            }\n\n        }\n        return animationsList;\n    };\n    runAnimationVector(animationVector: PixiTile[], stepFunctionName: string, totalSteps: number): Promise<number> {\n        /**to call this function animationVector must contain tiles already prepared for this animation with steps=totalSteps */\n        const self = this;\n        return new Promise(function (resolve: any, reject: any) {\n\n            let stepsCounter = 0;\n            const totalTiles = animationVector.length;\n\n            const _PIXI_APP = self.PIXI_APP;\n\n\n            let animate = (t: number) => {\n                if (stepsCounter < totalSteps) {\n                    for (let j = 0; j < totalTiles; ++j) {\n                        // tilesFnList[j]();\n                        animationVector[j][stepFunctionName]();\n                    }\n                    stepsCounter++;\n                    _PIXI_APP.ticker.update();\n                    return requestAnimationFrame(animate);\n                } else {\n                    for (let j = 0; j < totalTiles; ++j) {\n                        animationVector[j].resetAllAnimationsData();\n                    }\n                    _PIXI_APP.ticker.update();\n                    return resolve(totalSteps);\n                }\n            };\n\n            requestAnimationFrame(animate);\n\n        });\n    };\n    resize() { };\n    resync() { };\n    remove() { };\n    isTileOutBound(tileObj: PixiTile) {\n\n        let ans = tileObj.row <= -1 || tileObj.col <= -1 || tileObj.row >= this.torus.rows || tileObj\n            .col >= this.torus.cols;\n\n        return ans;\n    };\n    resetTilePosition(tileObj: PixiTile) {\n        let tileGraphics = tileObj.getObjectToUse();\n        let conf = this._configuration;\n        let rows: number = this.torus.rows;\n        let cols: number = this.torus.cols;\n        if (tileObj.row == -2) {\n            console.log(`row -2  old position: r:${tileObj.row} c:${tileObj.col}`);\n            tileObj.row = rows;\n            console.log(`new position: r:${tileObj.row} c:${tileObj.col}`);\n            tileGraphics.y = rows * conf.tileFullSize + conf.margins;\n        } else if (tileObj.row > rows) {\n            console.log(` row > cols old position: r:${tileObj.row} c:${tileObj.col}`);\n            tileObj.row = -1;\n            console.log(`new position: r:${tileObj.row} c:${tileObj.col}`);\n\n            tileGraphics.y = -conf.tileFullSize + conf.margins;\n        }\n\n        if (tileObj.col == -2) {\n            console.log(`col -2 old position: r:${tileObj.row} c:${tileObj.col}`);\n            tileObj.col = cols;\n\n            tileGraphics.x = cols * conf.tileFullSize + conf.margins;\n            console.log(`new position: r:${tileObj.row} c:${tileObj.col}`);\n        } else if (tileObj.col > cols) {\n            console.log(`col > row old position: r:${tileObj.row} c:${tileObj.col}`);\n            tileObj.col = -1;\n\n            tileGraphics.x = -conf.tileFullSize + conf.margins;\n            console.log(`new position: r:${tileObj.row} c:${tileObj.col}`);\n        }\n    };\n    slideRow(rowIdx: number, direction: number): Promise<number> {\n        this.SEMAPHORES.slide = false;\n        // console.log(`slide row: ${rowIdx} -- ${direction}`)\n        let conf = this._configuration;\n        let torus = this.torus;\n        let moveOf: number = this._configuration.tileFullSize;\n        let moveOfAbs: number = 1;\n        let tilesMap = this.tilesMap;\n        let rowToSlide = tilesMap[rowIdx];\n        if (direction === SLIDE_LEFT) {\n            moveOf = -moveOf;\n            moveOfAbs = -1;\n            torus.slideRowLeft(rowIdx);\n        } else {\n            torus.slideRowRight(rowIdx)\n        }\n        torus.valuate();\n        this.beforeSlideSetRow(rowIdx, direction);\n        let animations: PixiTile[] = [];\n        for (let i = -1; i <= torus.cols; ++i) {\n            rowToSlide[i].col += moveOfAbs;\n            rowToSlide[i].slideOfPrepareFn(moveOf, 0, conf.animationSteps);\n            animations.push(rowToSlide[i]);\n        }\n\n\n        return this.runAnimationVector(animations, \"slideStep\", conf.animationSteps).then((res) => {\n\n            // console.log(\"slide ended for tile: \", tileObj.row, tileObj.col, tileObj.value);\n            for (let i = 0; i < animations.length; ++i) {\n                let tileObj = animations[i];\n                //console.log(\"slide ended for tile: \", tileObj.row, tileObj.col, tileObj.faceValue);\n                this.resetTilePosition(tileObj);\n                tilesMap[tileObj.row][tileObj.col] = tileObj;\n                if (this.isTileOutBound(tileObj)) {\n                    tileObj.setOutside();\n                }\n            }\n\n            return res;\n        });\n    };\n    slideColumn(colIdx: number, direction: number): Promise<number> {\n        //console.log(`slide row: ${colIdx} -- ${direction}`);\n        this.SEMAPHORES.slide = false;\n        let conf = this._configuration;\n        let torus = this.torus;\n        let moveOf: number = this._configuration.tileFullSize;\n        let moveOfAbs: number = 1;\n        let tilesMap = this.tilesMap;\n\n        if (direction === SLIDE_UP) {\n            moveOf = -moveOf;\n            moveOfAbs = -1;\n            torus.slideColUp(colIdx);\n        } else {\n            torus.slideColDown(colIdx)\n        }\n        torus.valuate();\n        this.beforeSlideSetCol(colIdx, direction);\n        let animations: PixiTile[] = [];\n        for (let i = -1; i <= torus.cols; ++i) {\n            tilesMap[i][colIdx].row += moveOfAbs;\n            tilesMap[i][colIdx].slideOfPrepareFn(0, moveOf, conf.animationSteps);\n            animations.push(tilesMap[i][colIdx]);\n        }\n\n\n        return this.runAnimationVector(animations, \"slideStep\", conf.animationSteps).then((res) => {\n\n            for (let i = 0; i < animations.length; ++i) {\n                let tileObj = animations[i];\n                // console.log(\"slide ended for tile: \", tileObj.row, tileObj.col, tileObj.faceValue);\n                this.resetTilePosition(tileObj);\n                tilesMap[tileObj.row][tileObj.col] = tileObj;\n                if (this.isTileOutBound(tileObj)) {\n                    tileObj.setOutside();\n                }\n            }\n\n            return res;\n        });\n    };\n    setMouseGestureReaction() { };\n    getTileSize() { };\n    beforeSlideSetRow(rowIdx: number, direction: number) {\n        let torus = this.torus;\n        let tilesMap = this.tilesMap;\n        let conf = this._configuration;\n        let cols = torus.cols;\n        let rows = torus.rows;\n        if (direction === SLIDE_RIGHT) {\n            /*set outsiders*/\n            let outSideTile = tilesMap[rowIdx][-1];\n            let tempValue = torus.getValueRC(rowIdx, 0);\n            if (tempValue !== null) {\n                outSideTile.faceValue = tempValue;\n            }\n            /*set nulls*/\n            for (let c = cols - 2; c >= 0; --c) {\n                if (torus.getValueRC(rowIdx, c) === null) {\n                    let tmpVal = torus.getValueRC(rowIdx, c + 1);\n                    if (tmpVal !== null) {\n                        tilesMap[rowIdx][c].faceValue = tmpVal;\n                    }\n                }\n            }\n        } else {\n            let outSideTile = tilesMap[rowIdx][cols];\n            let tempValue = torus.getValueRC(rowIdx, cols - 1);\n            if (tempValue !== null) {\n                outSideTile.faceValue = tempValue;\n            }\n            /*set nulls*/\n            for (let c = 1; c < cols; ++c) {\n                if (torus.getValueRC(rowIdx, c) === null) {\n                    let tmpVal = torus.getValueRC(rowIdx, c - 1);\n                    if (tmpVal !== null) {\n                        tilesMap[rowIdx][c].faceValue = tmpVal;\n                    }\n                }\n            }\n        }\n    };\n    beforeSlideSetCol(colIdx: number, direction: number) {\n        let torus = this.torus;\n        let tilesMap = this.tilesMap;\n        let conf = this._configuration;\n        let cols: number = torus.cols;\n        let rows: number = torus.rows;\n        if (direction === SLIDE_DOWN) {\n            /*set outsiders*/\n            let outSideTile = tilesMap[-1][colIdx];\n            let tempValue = torus.getValueRC(0, colIdx);\n            if (tempValue !== null) {\n                outSideTile.faceValue = tempValue;\n            }\n            /*set nulls*/\n            for (let r = rows - 2; r >= 0; --r) {\n                if (torus.getValueRC(r, colIdx) === null) {\n                    let tmpVal = torus.getValueRC(r + 1, colIdx);\n                    if (tmpVal !== null) {\n                        tilesMap[r][colIdx].faceValue = tmpVal;\n                    }\n                }\n            }\n        } else {\n            let outSideTile = tilesMap[rows][colIdx];\n            let tempValue = torus.getValueRC(rows - 1, colIdx);\n            if (tempValue !== null) {\n                outSideTile.faceValue = tempValue;\n            }\n            /*set nulls*/\n            for (let r = 1; r < rows; ++r) {\n                if (torus.getValueRC(r, colIdx) === null) {\n                    let tmpVal = torus.getValueRC(r - 1, colIdx);\n                    if (tmpVal !== null) {\n                        tilesMap[r][colIdx].faceValue = tmpVal;\n                    }\n                }\n            }\n        }\n    };\n    placeTileInContainer(r, c, val, pixiContainer): PixiTile {\n        let aTile = new PixiTile(this._configuration, this.PIXI_APP, this.TILE_TEXTURES_LIST, this.ANIMATION_TEXTURES_LIST, val);\n        pixiContainer.addChild(aTile.getObjectToUse());\n        aTile.row = r;\n        aTile.col = c;\n        aTile.positionByRowAndCol();\n        return aTile;\n    };\n    buildStartTiles() {\n        let torusMatrix = this.startingGrid;\n        let pixiContainer = this.torusContainer;\n        const conf = this._configuration;\n        let cellSize = conf.tileSize;\n        let graphicsTilesMap = this.tilesMap;\n        let rows = this.torus.rows;\n        let cols = this.torus.cols;\n        graphicsTilesMap[-1] = {};\n        graphicsTilesMap[rows] = {};\n        torusMatrix.forEach((row, r) => {\n            /*set the left outboudn element*/\n            graphicsTilesMap[r] = {};\n            graphicsTilesMap[r][-1] = this.placeTileInContainer(r, -1, 0, pixiContainer);\n            row.forEach((cell, c) => {\n                if (r === 0) {\n                    /*place top and bottom in columns*/\n                    graphicsTilesMap[-1][c] = this.placeTileInContainer(-1, c, 0,\n                        pixiContainer);\n                    graphicsTilesMap[rows][c] = this.placeTileInContainer(\n                        rows, c, 0, pixiContainer);\n                }\n                graphicsTilesMap[r][c] = this.placeTileInContainer(r, c, cell,\n                    pixiContainer);\n\n            });\n            /*place the right outbound element*/\n            graphicsTilesMap[r][cols] = this.placeTileInContainer(r, cols, 0,\n                pixiContainer);\n        });\n        //console.log(\"loggin tiles maep: \", this.tilesMap);\n    };\n    static buildAnimationTexturesList(_PIXI_APP: PIXI.Application, _main_graphics_config: graphicsConfiguration): Object {\n\n        const ANIMATION_TEXTURES_LIST: Object = {\n            \"12\": {},\n            \"11\": {},\n            \"10\": {},\n            \"9\": {},\n            \"8\": {},\n            \"7\": {},\n            \"6\": {},\n            \"5\": {},\n            \"4\": {}\n        };\n        let auxTilesList: Object = {};\n        let TILE_TEXTURES_LIST: PIXI.Texture[] = [];\n        for (let i = -9; i < 10; ++i) {\n            if (i == 0) { continue; }\n            auxTilesList[i] = new PixiTile(_main_graphics_config, _PIXI_APP, TILE_TEXTURES_LIST, ANIMATION_TEXTURES_LIST, i);\n            auxTilesList[i].setGraphicsMode();\n            let tmpTile = auxTilesList[i];\n\n            //12\n            ANIMATION_TEXTURES_LIST[\"12\"][i] = [];\n            tmpTile._prepareAnimateBorderTextGraphics(12);\n            for (let j = 0; j < 12; ++j) {\n                tmpTile._animateBorderTextStep();\n                let tmpTexture = tmpTile.getGraphics().generateCanvasTexture();//_PIXI_APP.renderer.generateTexture(tmpTile.getGraphics() as PIXI.Graphics);\n                ANIMATION_TEXTURES_LIST[\"12\"][i].push(tmpTexture);\n\n            }\n\n            //11\n            ANIMATION_TEXTURES_LIST[\"11\"][i] = [];\n            for (let j = 0; j < 11; ++j) {\n                ANIMATION_TEXTURES_LIST[\"11\"][i].push(ANIMATION_TEXTURES_LIST[\"12\"][i][j + 1]);\n            }\n\n            //10\n            ANIMATION_TEXTURES_LIST[\"10\"][i] = [];\n            for (let j = 0; j < 10; ++j) {\n                let t = j < 9 ? j + 1 : j + 2;\n                ANIMATION_TEXTURES_LIST[\"10\"][i].push(ANIMATION_TEXTURES_LIST[\"12\"][i][t]);\n            }\n            //9\n            ANIMATION_TEXTURES_LIST[\"9\"][i] = [];\n            for (let j = 0; j < 9; ++j) {\n                ANIMATION_TEXTURES_LIST[\"9\"][i].push(ANIMATION_TEXTURES_LIST[\"10\"][i][j + 1]);\n            }\n\n            //8\n            ANIMATION_TEXTURES_LIST[\"8\"][i] = [];\n            for (let j = 0; j < 8; ++j) {\n                ANIMATION_TEXTURES_LIST[\"8\"][i].push(ANIMATION_TEXTURES_LIST[\"9\"][i][j + 1]);\n\n            }\n            //7\n            ANIMATION_TEXTURES_LIST[\"7\"][i] = [];\n            for (let j = 0; j < 12; j++) {\n                if (j > 1) { j++; }\n                ANIMATION_TEXTURES_LIST[\"7\"][i].push(ANIMATION_TEXTURES_LIST[\"12\"][i][j]);\n            }\n            //6\n            ANIMATION_TEXTURES_LIST[\"6\"][i] = [];\n            for (let j = 0; j < 12; j += 2) {\n                ANIMATION_TEXTURES_LIST[\"6\"][i].push(ANIMATION_TEXTURES_LIST[\"12\"][i][j]);\n            }\n            //5\n            ANIMATION_TEXTURES_LIST[\"5\"][i] = [];\n            for (let j = 0; j < 10; j += 2) {\n                ANIMATION_TEXTURES_LIST[\"5\"][i].push(ANIMATION_TEXTURES_LIST[\"10\"][i][j]);\n\n            }\n\n            //4\n            ANIMATION_TEXTURES_LIST[\"4\"][i] = [];\n            for (let j = 0; j < 12; j += 3) {\n                ANIMATION_TEXTURES_LIST[\"4\"][i].push(ANIMATION_TEXTURES_LIST[\"12\"][i][j]);\n            }\n        }\n\n        return ANIMATION_TEXTURES_LIST;\n    };\n    static buildTilesTexturesList(renderer: any, _main_graphics_config: graphicsConfiguration): PIXI.Texture[] {\n        let TILE_TEXTURES_LIST: PIXI.Texture[] = [];\n        for (let i = -9; i < 10; ++i) {\n            let tempTile: PIXI.Graphics = PixiTile.createTileAsGraphics(_main_graphics_config, i);\n            TILE_TEXTURES_LIST[i] = tempTile.generateCanvasTexture();//renderer.generateTexture(tempTile);\n        }\n        return TILE_TEXTURES_LIST;\n    };\n    static setMainGraphicsConfig(tileFullSize: number, mainConfig: graphicsConfiguration): void {\n\n        mainConfig.tileSize = tileFullSize;\n        mainConfig.tileFullSize = tileFullSize;\n\n        mainConfig.margins = Math.ceil(tileFullSize * mainConfig.marginPercent);\n        mainConfig.tileSize = tileFullSize - 2 * mainConfig.margins;\n        mainConfig.fontSize = Math.round((tileFullSize - 2 * mainConfig.margins) * mainConfig.fontSizePercent);\n        mainConfig.biggerFontSize = Math.round((tileFullSize - 2 * mainConfig.margins) * mainConfig.doubleFontSizePercent);\n        mainConfig.strokeThicknessDouble = mainConfig.margins * 2.5;\n        mainConfig.roundBorderFactor = Math.ceil(tileFullSize * mainConfig.borderPercent);\n        mainConfig.doubleBorderFactor = Math.ceil(tileFullSize * mainConfig.doubleBorderPercent);\n    };\n};\n\n\n/**generate prerendered textures */\nconsole.time(\"textures\");\n(() => {\n    let PIXI_APP = new PIXI.Application(1000, 1000, {\n        antialias: true,\n        transparent: true,\n        autoResize: true\n    });\n    let config = Object.assign({}, MAIN_GRAPHICS_CONFIG);\n    TorusViewFactory.setMainGraphicsConfig(262, config);\n\n    TEXTURES_GLOBAL.TILE_TEXTURES = TorusViewFactory.buildTilesTexturesList(PIXI_APP.renderer, config);\n    TEXTURES_GLOBAL.ANIMATION_TEXTURES = TorusViewFactory.buildAnimationTexturesList(PIXI_APP, config);\n})();\nconsole.timeEnd(\"textures\");","import { PixiTile } from \"./PixiTile\";\nimport { graphicsConfiguration } from \"./interfaces\";\nimport * as PIXI from 'pixi.js';\nimport { MAIN_GRAPHICS_CONFIG } from \"./torusViewFactory\";\nimport { TorusViewFactory } from \"./torusViewFactory\";\n\nconst canvasContainer = document.getElementById(\"game-play\");\n\nconst _PIXI_APP: PIXI.Application = new PIXI.Application(1200, 1200, {\n    antialias: true,\n    transparent: true,\n    autoResize: true\n});\n\n_PIXI_APP.renderer.autoResize = true;\n\ncanvasContainer.appendChild(_PIXI_APP.view);\n\nconst torusContainer: PIXI.Container = new PIXI.Container();\n\n_PIXI_APP.stage.addChild(torusContainer);\ntorusContainer.x = 0;\ntorusContainer.y = 0;\n\ntorusContainer.interactiveChildren = false;\n\n_PIXI_APP.stage.interactive = true;\n\nconst tileFullSize: number = 100;\n\nconst _main_graphics_config = Object.assign({}, MAIN_GRAPHICS_CONFIG);\n\nTorusViewFactory.setMainGraphicsConfig(tileFullSize, _main_graphics_config);\n\n\nconst TILE_TEXTURES_LIST: PIXI.Texture[] = [];\n\nfor (let i = -9; i < 10; ++i) {\n    let tempTile: PIXI.Graphics = PixiTile.createTileAsGraphics(_main_graphics_config, i);\n    TILE_TEXTURES_LIST[i] = _PIXI_APP.renderer.generateTexture(tempTile);\n}\n\n/**\n * \n * BUILD TEXTURES LIST FOR ANIMATIONS\n * \n */\nlet ANIMATION_TEXTURES_LIST: Object = {\n    \"12\": {},\n    \"11\": {},\n    \"10\": {},\n    \"9\": {},\n    \"8\": {},\n    \"7\": {},\n    \"6\": {},\n    \"5\": {},\n    \"4\": {}\n};\n\n\nlet neueConfig = Object.assign({}, MAIN_GRAPHICS_CONFIG);\nTorusViewFactory.setMainGraphicsConfig(262, neueConfig);\n\nANIMATION_TEXTURES_LIST = TorusViewFactory.buildAnimationTexturesList(_PIXI_APP, neueConfig);\n\nconsole.log(ANIMATION_TEXTURES_LIST);\n/** INCREMENT THIS TO ANIMATE MORE TILES AND STRESS TEST PREFORMANCE */\nlet TOTAL_TILES = 100;\n\nlet tilesList: PixiTile[] = [];\n\nfor (let i = 0; i < TOTAL_TILES; ++i) {\n    tilesList.push(new PixiTile(_main_graphics_config, _PIXI_APP, TILE_TEXTURES_LIST, ANIMATION_TEXTURES_LIST, i % 9 + 1));\n\n    /** \n     * \n     *!!!!!! UNCOMMENT THE FOLLOWING LINE TO TEST PERFORMANCE USING GRAPHICS OBJECTS INSTEAD OF SPRITES!!!!!!! \n     * \n     * */\n    //tilesList[i].setGraphicsMode();\n\n    tilesList[i].moveTo(Math.random() * 500, Math.random() * 500);\n    _PIXI_APP.stage.addChild(tilesList[i].getObjectToUse() as PIXI.Graphics);\n\n}\n\n\nconsole.log(\"loggin tiles list: \", tilesList);\n\n// @ts-ignore\nwindow.ticker = _PIXI_APP.ticker;\n\n_PIXI_APP.ticker.stop();\n_PIXI_APP.ticker.update();\n\nlet globalCounter = 0;\n\nconst moveTilesGroup = (totalSteps: number): Promise<number> => {\n    return new Promise(function (resolve: any, reject: any) {\n        let stepsCounter = 0;\n        if (globalCounter >= 100) {\n            return reject(globalCounter);\n        }\n        globalCounter++;\n        for (let j = 0; j < TOTAL_TILES; ++j) {\n            tilesList[j].slideOfPrepareFn(Math.random() * 500 - 250, Math.random() * 500 - 250, totalSteps);\n            tilesList[j].prepareAnimateTint(Math.random() * 0xFFFFFF, 12);\n            tilesList[j].preapreAnimateDouble(12, j % 2 == 0 ? 1 : -1);\n            //tilesList[j].faceValue = globalCounter % 10;\n        }\n\n        let move = (t: number) => {\n            if (stepsCounter < totalSteps) {\n                for (let j = 0; j < TOTAL_TILES; ++j) {\n                    /**texting texture switch at every tick, commend the following line to stop it */\n                    // tilesList[j].faceValue = ~~(Math.random() * 10);\n                    tilesList[j].slideStep();\n                    tilesList[j].animateTintStep();\n                    tilesList[j].stepAnimateDouble();\n                }\n                stepsCounter++;\n                _PIXI_APP.ticker.update();\n                return requestAnimationFrame(move);\n            } else {\n                for (let j = 0; j < TOTAL_TILES; ++j) {\n                    tilesList[j].resetAllAnimationsData();\n                }\n                _PIXI_APP.ticker.update();\n                moveTilesGroup(totalSteps);\n                return resolve(totalSteps);\n            }\n        };\n\n        requestAnimationFrame(move);\n\n    });\n\n\n};\n/**moving cycle */\nmoveTilesGroup(12);\n\n\n\n"],"names":["PIXI.Application","PIXI.Container","PIXI.Graphics"],"mappings":"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"}