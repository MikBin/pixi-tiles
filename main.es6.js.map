{"version":3,"file":"main.es6.js","sources":["src/interfaces.ts","src/PixiTile.ts","src/index.ts"],"sourcesContent":["\nexport enum directionFB { forward = 1, backward = -1 };\n\nexport interface animationData {\n    totalSteps: number;\n    currentStep: number;\n};\n\nexport interface slideData extends animationData {\n    slideAmountX: number;\n    slideAmountY: number;\n    objectToMove: PIXI.Sprite | PIXI.Graphics | PIXI.RoundedRectangle;\n};\nexport interface textureBasedAnimationData extends animationData {\n    texturesList: PIXI.Texture[];\n    direction: directionFB;\n    _index: number;\n};\nexport interface tintAnimationData extends animationData {\n    tintStep_RED: number;\n    tintStep_GREEN: number;\n    tintStep_BLUE: number;\n    objectToAnimate: PIXI.Sprite | PIXI.Graphics | PIXI.RoundedRectangle;\n};\nexport interface doubleGraphicsAnimation extends animationData {\n    borderRadiusStep: number;\n    currentRadius: number;\n    textSizeStep: number;\n    strokeThicknessStep: number;\n}\nexport interface graphicsConfiguration {\n    marginPercent: number;\n    fontSizePercent: number;\n    doubleFontSizePercent: number;\n    borderPercent: number;\n    doubleBorderPercent: number;\n    _16_9_MOD: number;\n    containerHeightModifier: number;\n    sizeNormalizer: number;\n    rows: number;\n    cols: number;\n    tileSize: number;\n    tileFullSize: number;\n    fontSize: number;\n    biggerFontSize: number;\n    tileBackColor: number;\n    defaultAlpha: number;\n    strokeThicknessBase: number;\n    strokeThicknessDouble: number;\n    roundBorderFactor: number;\n    doubleBorderFactor: number;\n    tileNumberColors: number[];\n    tileNumberBackColors: number[];\n    negativeNumberColor: number;\n    negativeBackNumberColor: number;\n    animationSteps: number;\n    stepsFor_60_FPS: number;\n    stepsLimit: number;\n    margins: number;\n    animationTiming: number;\n    slideChangeThreshold: number;\n\n}","import { slideData, doubleGraphicsAnimation, textureBasedAnimationData, directionFB } from \"./interfaces\";\nimport { tintAnimationData } from \"./interfaces\";\nimport { graphicsConfiguration } from \"./interfaces\";\nimport { Graphics, GraphicsData } from \"pixi.js\";\nimport { GlowFilter } from \"pixi-filters\";\n\n// @ts-ignore\n//const __filters = window.__filters;\n\nenum mainGraphicType { Graphics, Sprite };\nconst startGlowFilterValues: number[] = [0, 0, 0, 0xFFFFFF, 0.1];\n\nclass PixiTile {\n    private _GRAPHICS_OBJECT: PIXI.RoundedRectangle | PIXI.Graphics;\n    private _SPRITE_OBJECT: PIXI.Sprite;\n    private _SLIDE_DATA: slideData;\n    private _GRAPHICS_ANIMATE_DATA: doubleGraphicsAnimation;\n    private _TINT_ANIMATION_DATA: tintAnimationData;\n    private _TEXTURE_ANIMATION_DATA: textureBasedAnimationData;\n    private graphicsType: mainGraphicType;\n    private doubleValueFilter: GlowFilter;\n    /**integer coordinates relative to rowsXcols grid size  --> independent of canvas size */\n    private absX: number;\n    private absY: number;\n    constructor(private globalConfig: graphicsConfiguration, private APP: PIXI.Application, private _TEXTURES_LIST: PIXI.Texture[], private _ANIMATION_TEXTURES: Object, private _value: number | string = 0) {\n\n        this.graphicsType = mainGraphicType.Sprite;\n        this._GRAPHICS_OBJECT = PixiTile.createTileAsGraphics(globalConfig, _value);\n        this._SPRITE_OBJECT = new PIXI.Sprite(_TEXTURES_LIST[_value as number]);\n        this._SLIDE_DATA = { currentStep: 0, slideAmountX: 0, slideAmountY: 0, totalSteps: 0, objectToMove: this._SPRITE_OBJECT };\n        this._TINT_ANIMATION_DATA = { currentStep: 0, totalSteps: 0, tintStep_RED: 0, tintStep_BLUE: 0, tintStep_GREEN: 0, objectToAnimate: this._SPRITE_OBJECT };\n        this._GRAPHICS_ANIMATE_DATA = { currentStep: 0, totalSteps: 0, textSizeStep: 0, strokeThicknessStep: 0, borderRadiusStep: 0, currentRadius: globalConfig.roundBorderFactor };\n        this._TEXTURE_ANIMATION_DATA = { currentStep: 0, totalSteps: 0, texturesList: [], direction: directionFB.forward, _index: 0 };\n        //this.doubleValueFilter = new GlowFilter();\n        // this._SPRITE_OBJECT.filters = [this.doubleValueFilter];\n\n    }\n    setSpriteMode(): void {\n        this.graphicsType = mainGraphicType.Sprite;\n        this._SLIDE_DATA.objectToMove = this._SPRITE_OBJECT;\n    };\n    setGraphicsMode(): void {\n        this.graphicsType = mainGraphicType.Graphics;\n        this._SLIDE_DATA.objectToMove = this._GRAPHICS_OBJECT;\n    };\n    createGraphics(): PixiTile {\n        this._GRAPHICS_OBJECT = PixiTile.createTileAsGraphics(this.globalConfig, this._value);\n        return this;\n    };\n    moveTo(x: number, y: number): void {\n        let objectToMove = this._SLIDE_DATA.objectToMove = this.graphicsType === mainGraphicType.Graphics ? this._GRAPHICS_OBJECT : this._SPRITE_OBJECT;\n        objectToMove.x = x;\n        objectToMove.y = y;\n    };\n    prepareFilterAnimation() { };\n    resetFilterAnimation() { };\n    slideOfPrepareFn(x: number, y: number, steps: number): void {\n        this._SLIDE_DATA.currentStep = 0;\n        this._SLIDE_DATA.totalSteps = steps;\n        this._SLIDE_DATA.slideAmountX = x / this.globalConfig.tileFullSize;\n        this._SLIDE_DATA.slideAmountY = y / this.globalConfig.tileFullSize;\n        this._SLIDE_DATA.objectToMove = this.graphicsType === mainGraphicType.Graphics ? this._GRAPHICS_OBJECT : this._SPRITE_OBJECT;\n        /**calculate steps amount for X and Y */\n    };\n    slideOf_percent_PrepareFn(x: number, y: number, steps: number): void {\n        /**call slideOfPrepare */\n    };\n    slideToPrepareFn(x: number, y: number, steps: number): void {\n        /**call slideOfPrepare */\n    };\n    slideStep(): number {\n        let _SLIDE_DATA = this._SLIDE_DATA;\n        if (_SLIDE_DATA.currentStep === _SLIDE_DATA.totalSteps) {\n            //resetHere?\n            return 0;\n        }\n        _SLIDE_DATA.currentStep++;\n        let objectToMove = _SLIDE_DATA.objectToMove;\n        objectToMove.x += _SLIDE_DATA.slideAmountX;\n        objectToMove.y += _SLIDE_DATA.slideAmountY;\n        return _SLIDE_DATA.currentStep;\n    };\n    resetSlideData(): PixiTile {\n        this._SLIDE_DATA.currentStep = 0;\n        this._SLIDE_DATA.totalSteps = 0;\n        this._SLIDE_DATA.slideAmountX = 0;\n        this._SLIDE_DATA.slideAmountY = 0;\n        return this;\n    };\n    resetAllAnimationsData(): PixiTile {\n        this._SLIDE_DATA.currentStep = 0;\n        this._SLIDE_DATA.totalSteps = 0;\n        this._SLIDE_DATA.slideAmountX = 0;\n        this._SLIDE_DATA.slideAmountY = 0;\n        this._TINT_ANIMATION_DATA.currentStep = 0;\n        this._TINT_ANIMATION_DATA.totalSteps = 0;\n        this._TINT_ANIMATION_DATA.tintStep_BLUE = 0;\n        this._TINT_ANIMATION_DATA.tintStep_GREEN = 0;\n        this._TINT_ANIMATION_DATA.tintStep_RED = 0;\n        this._TEXTURE_ANIMATION_DATA.totalSteps = 0;\n        this._TEXTURE_ANIMATION_DATA.direction = directionFB.forward;\n        this._TEXTURE_ANIMATION_DATA._index = 0;\n        this._TEXTURE_ANIMATION_DATA.currentStep = 0;\n\n        //TODO reset texture ones\n        return this;\n    };\n    set faceValue(v: number | string) {\n        /**depending on graphicsType change one of the two */\n        this._value = v;\n        if (this.graphicsType === mainGraphicType.Sprite) {\n            this._SPRITE_OBJECT.texture = this._TEXTURES_LIST[this._value as number];\n        } else {\n\n            let numberElement = (<PIXI.Graphics>this._GRAPHICS_OBJECT).children[0] as PIXI.Text;\n\n            if (v !== 0) {\n                numberElement.text = `${v}`;\n                numberElement.style.fill = v > 0 ? this.globalConfig.tileNumberColors[v] : this.globalConfig.negativeNumberColor;\n                numberElement.style.fontSize = this.globalConfig.fontSize;\n                numberElement.style.strokeThickness = this.globalConfig.strokeThicknessBase;\n            } else {\n                numberElement.text = '';\n            }\n\n        }\n    };\n    get faceValue(): number | string {\n        return this._value;\n    };\n    set X(x: number) {\n        this.absX = x;\n    };\n    set Y(y: number) {\n        this.absY = y;\n    };\n    getGraphics(): PIXI.Sprite | PIXI.Graphics | PIXI.RoundedRectangle {\n        return this._GRAPHICS_OBJECT;\n    };\n    getSprite(): PIXI.Sprite {\n        return this._SPRITE_OBJECT;\n    };\n    getObjectToUse(): PIXI.Sprite | PIXI.Graphics | PIXI.RoundedRectangle {\n        return this.graphicsType === mainGraphicType.Graphics ? this._GRAPHICS_OBJECT : this._SPRITE_OBJECT;\n    };\n    setGraphicsFaceValue() { };\n    setSpriteFaceValue() { };\n    preapreAnimateDouble(steps: number, dir: directionFB): void {\n        this._TEXTURE_ANIMATION_DATA.totalSteps = steps;\n        this._TEXTURE_ANIMATION_DATA.direction = dir;\n        this._TEXTURE_ANIMATION_DATA._index = dir === directionFB.forward ? 0 : steps - 1;\n        this._TEXTURE_ANIMATION_DATA.currentStep = 0;\n        this._TEXTURE_ANIMATION_DATA.texturesList = this._ANIMATION_TEXTURES[steps][this._value];\n\n    };\n    stepAnimateDouble(): number {\n\n        let _TEXTURE_ANIMATION_DATA = this._TEXTURE_ANIMATION_DATA;\n        if (_TEXTURE_ANIMATION_DATA.currentStep == _TEXTURE_ANIMATION_DATA.totalSteps) {\n            return _TEXTURE_ANIMATION_DATA.totalSteps;\n        }\n\n        this._SPRITE_OBJECT.texture = _TEXTURE_ANIMATION_DATA.texturesList[_TEXTURE_ANIMATION_DATA._index];\n\n        _TEXTURE_ANIMATION_DATA._index += _TEXTURE_ANIMATION_DATA.direction;\n        _TEXTURE_ANIMATION_DATA.currentStep++;\n        return _TEXTURE_ANIMATION_DATA.currentStep;\n    };\n    prepareAnimateTint(tint: number, steps: number): void {\n\n        let graphicsData = this._TINT_ANIMATION_DATA.objectToAnimate = this.graphicsType === mainGraphicType.Graphics ? this._GRAPHICS_OBJECT : this._SPRITE_OBJECT;\n        this._TINT_ANIMATION_DATA.currentStep = 0;\n        this._TINT_ANIMATION_DATA.totalSteps = steps;\n        let fillColor: number = (<PIXI.Graphics>graphicsData).tint;\n        let r = (fillColor & 0xFF0000) >> 16;\n        let g = (fillColor & 0x00FF00) >> 8;\n        let b = fillColor & 0x0000FF;\n        let tr = (tint & 0xFF0000) >> 16;\n        let tg = (tint & 0x00FF00) >> 8;\n        let tb = tint & 0x0000FF;\n\n        this._TINT_ANIMATION_DATA.tintStep_RED = (tr - r) / steps;\n        this._TINT_ANIMATION_DATA.tintStep_GREEN = (tg - g) / steps;\n        this._TINT_ANIMATION_DATA.tintStep_BLUE = (tb - b) / steps;\n\n    };\n    animateTintStep(): number {\n\n        let _TINT_ANIMATION_DATA = this._TINT_ANIMATION_DATA;\n        if (_TINT_ANIMATION_DATA.currentStep === _TINT_ANIMATION_DATA.totalSteps) {\n            //resetHere?\n            return 0;\n        }\n        _TINT_ANIMATION_DATA.currentStep++;\n        let objectToAnimate = _TINT_ANIMATION_DATA.objectToAnimate;\n\n        let paintTint: number =\n            (_TINT_ANIMATION_DATA.tintStep_RED << 16) + (_TINT_ANIMATION_DATA.tintStep_GREEN << 8) + _TINT_ANIMATION_DATA.tintStep_BLUE;\n\n        (<PIXI.Graphics>objectToAnimate).tint += paintTint;\n\n        return _TINT_ANIMATION_DATA.currentStep;\n    };\n    _resetBorderAndTextGraphics() {\n        /**graphics mode only */\n        let _GRAPHICS_OBJECT = this._GRAPHICS_OBJECT as PIXI.Graphics;\n        this.faceValue = this._value;\n        _GRAPHICS_OBJECT.clear();\n        _GRAPHICS_OBJECT.beginFill(this.globalConfig.tileBackColor, this.globalConfig.defaultAlpha);\n        _GRAPHICS_OBJECT.drawRoundedRect(0, 0, this.globalConfig.tileSize, this.globalConfig.tileSize, this.globalConfig.roundBorderFactor);\n        _GRAPHICS_OBJECT.endFill();\n    };\n    _prepareAnimateBorderTextGraphics(steps: number): void {\n        /**used for prerendering textures only */\n        let _GRAPHICS_OBJECT = this._GRAPHICS_OBJECT;\n        let text: PIXI.Text = (<PIXI.Graphics>_GRAPHICS_OBJECT).children[0] as PIXI.Text;\n        let textStyle: PIXI.TextStyle = text.style;\n        let fontSize: number | string = textStyle.fontSize as number;\n        let _GRAPHICS_ANIMATE_DATA = this._GRAPHICS_ANIMATE_DATA;\n        _GRAPHICS_ANIMATE_DATA.currentStep = 0;\n        _GRAPHICS_ANIMATE_DATA.totalSteps = steps;\n        _GRAPHICS_ANIMATE_DATA.borderRadiusStep = (this.globalConfig.doubleBorderFactor - this.globalConfig.roundBorderFactor) / steps;\n        _GRAPHICS_ANIMATE_DATA.strokeThicknessStep = (this.globalConfig.strokeThicknessDouble - textStyle.strokeThickness) / steps;\n        _GRAPHICS_ANIMATE_DATA.textSizeStep = (this.globalConfig.biggerFontSize - fontSize) / steps;\n    };\n    _animateBorderTextStep(): number {\n        /**used for prerendering textures only */\n        let _GRAPHICS_ANIMATE_DATA = this._GRAPHICS_ANIMATE_DATA;\n        if (_GRAPHICS_ANIMATE_DATA.currentStep === _GRAPHICS_ANIMATE_DATA.totalSteps) {\n            return 0;\n        }\n        let _GRAPHICS_OBJECT = this._GRAPHICS_OBJECT as PIXI.Graphics;\n        let text: PIXI.Text = (<PIXI.Graphics>_GRAPHICS_OBJECT).children[0] as PIXI.Text;\n        let textStyle: PIXI.TextStyle = text.style;\n        let fontSize: number | string = textStyle.fontSize as number;\n        let rad = (<PIXI.RoundedRectangle>this._GRAPHICS_OBJECT).radius;\n        let h: number = this.globalConfig.tileSize;\n        let w: number = this.globalConfig.tileSize;\n        let alpha: number = this.globalConfig.defaultAlpha;\n        let color: number = this.globalConfig.tileBackColor;\n        _GRAPHICS_ANIMATE_DATA.currentStep++;\n        fontSize += _GRAPHICS_ANIMATE_DATA.textSizeStep;\n        textStyle.fontSize = fontSize;\n        textStyle.strokeThickness += _GRAPHICS_ANIMATE_DATA.strokeThicknessStep;\n        _GRAPHICS_ANIMATE_DATA.currentRadius += _GRAPHICS_ANIMATE_DATA.borderRadiusStep;\n        _GRAPHICS_OBJECT.clear();\n        _GRAPHICS_OBJECT.beginFill(color, alpha);\n        _GRAPHICS_OBJECT.drawRoundedRect(0, 0, h, w, _GRAPHICS_ANIMATE_DATA.currentRadius);\n        _GRAPHICS_OBJECT.endFill();\n        return _GRAPHICS_ANIMATE_DATA.currentStep;\n    };\n\n    static createTileAsGraphics(_CONF: graphicsConfiguration, val: number | string | null) {\n\n        let aTile: PIXI.RoundedRectangle | PIXI.Graphics = new PIXI.Graphics();\n\n        aTile.beginFill(_CONF.tileBackColor, _CONF.defaultAlpha);\n\n        aTile.drawRoundedRect(0, 0, _CONF.tileSize, _CONF.tileSize, _CONF.roundBorderFactor);\n        aTile.endFill();\n        aTile.interactiveChildren = false;\n\n        if (val !== 0 && val !== null) {\n            let cellNumber: number | string | null = '';\n            cellNumber = val;\n            let textColor: number = cellNumber > 0 ? _CONF.tileNumberColors[cellNumber as number] : _CONF.negativeNumberColor;\n\n\n            let number: PIXI.Text = new PIXI.Text(`${cellNumber}`, {\n                fontWeight: 'bold',\n                fontSize: _CONF.fontSize,\n                fontFamily: 'Roboto',\n                fill: textColor,\n                align: 'center'\n            });\n\n            number.x = aTile.width / 2;\n            number.y = aTile.height / 2;\n            number.anchor.set(0.5, 0.5);\n            aTile.addChild(number);\n        }\n\n        return aTile;\n    };\n}\n\n\nexport { PixiTile };","import { PixiTile } from \"./PixiTile\";\nimport { graphicsConfiguration } from \"./interfaces\";\nimport * as PIXI from 'pixi.js';\n\nconst canvasContainer = document.getElementById(\"game-play\");\n\nconst _PIXI_APP: PIXI.Application = new PIXI.Application(1200, 1200, {\n    antialias: true,\n    transparent: true,\n    autoResize: true\n});\n\n_PIXI_APP.renderer.autoResize = true;\n\ncanvasContainer.appendChild(_PIXI_APP.view);\n\nconst torusContainer: PIXI.Container = new PIXI.Container();\n\n_PIXI_APP.stage.addChild(torusContainer);\ntorusContainer.x = 0;\ntorusContainer.y = 0;\n\ntorusContainer.interactiveChildren = false;\n\n_PIXI_APP.stage.interactive = true;\n\nconst tileFullSize: number = 100;\n\nconst MAIN_GRAPHICS_CONFIG: graphicsConfiguration = {\n    marginPercent: 0.01,\n    fontSizePercent: 0.6,\n    doubleFontSizePercent: 0.7,\n    borderPercent: 0.12,\n    doubleBorderPercent: 0.40,\n    _16_9_MOD: 0.6,\n    containerHeightModifier: 0.6,\n    sizeNormalizer: 1.04,\n    rows: 10,\n    cols: 10,\n    tileSize: tileFullSize,\n    tileFullSize: tileFullSize,\n    fontSize: 0,\n    biggerFontSize: 0,\n    tileBackColor: 0xFAFAFA,\n    defaultAlpha: 1,\n    strokeThicknessBase: 0,\n    strokeThicknessDouble: 0,\n    roundBorderFactor: 0,\n    doubleBorderFactor: 0,\n    tileNumberColors: [0xFAFAFA, 0x311B92, 0x0D47A1, 0x880E4F, 0x006064, 0xFF4500, 0x8B0000,\n        0x4B0082, 0x006400, 0x2F4F4F\n    ],\n    tileNumberBackColors: [0x0FAFAFA, 0x9781F8, 0x73ADFF, 0xEE74B5, 0x00dae4, 0xFFDE99,\n        0xff0c0c, 0x9403ff, 0x00e400, 0x95B5B5\n    ],\n    negativeNumberColor: 0x696969,\n    negativeBackNumberColor: 0xCCCCCC,\n    animationSteps: 12,\n    stepsFor_60_FPS: 12,\n    stepsLimit: 12,\n    margins: 0,\n    animationTiming: 200,\n    slideChangeThreshold: 20\n};\n\nMAIN_GRAPHICS_CONFIG.margins = Math.ceil(tileFullSize * MAIN_GRAPHICS_CONFIG.marginPercent);\nMAIN_GRAPHICS_CONFIG.tileSize = tileFullSize - 2 * MAIN_GRAPHICS_CONFIG.margins;\nMAIN_GRAPHICS_CONFIG.fontSize = Math.round((tileFullSize - 2 * MAIN_GRAPHICS_CONFIG.margins) * MAIN_GRAPHICS_CONFIG.fontSizePercent);\nMAIN_GRAPHICS_CONFIG.biggerFontSize = Math.round((tileFullSize - 2 * MAIN_GRAPHICS_CONFIG.margins) * MAIN_GRAPHICS_CONFIG.doubleFontSizePercent);\nMAIN_GRAPHICS_CONFIG.strokeThicknessDouble = MAIN_GRAPHICS_CONFIG.margins * 2.5;\nMAIN_GRAPHICS_CONFIG.roundBorderFactor = Math.ceil(tileFullSize * MAIN_GRAPHICS_CONFIG.borderPercent);\nMAIN_GRAPHICS_CONFIG.doubleBorderFactor = Math.ceil(tileFullSize * MAIN_GRAPHICS_CONFIG.doubleBorderPercent);\n\nconst TILE_TEXTURES_LIST: PIXI.Texture[] = [];\nconst ANIMATION_TEXTURES_LIST: Object = {\n    \"12\": {},\n    \"11\": {},\n    \"10\": {},\n    \"9\": {},\n    \"8\": {},\n    \"7\": {},\n    \"6\": {},\n    \"5\": {},\n    \"4\": {}\n};\n\n/**\n * \n * BUILD TEXTURES LIST FOR ANIMATIONS\n * \n */\nlet auxTilesList: Object = {}\nfor (let i = -9; i < 10; ++i) {\n    if (i == 0) { continue; }\n    auxTilesList[i] = new PixiTile(MAIN_GRAPHICS_CONFIG, _PIXI_APP, TILE_TEXTURES_LIST, ANIMATION_TEXTURES_LIST, i);\n    auxTilesList[i].setGraphicsMode();\n    let tmpTile = auxTilesList[i];\n\n    //12\n    ANIMATION_TEXTURES_LIST[\"12\"][i] = [];\n    tmpTile._prepareAnimateBorderTextGraphics(12);\n    for (let j = 0; j < 12; ++j) {\n        tmpTile._animateBorderTextStep();\n        let tmpTexture = _PIXI_APP.renderer.generateTexture(tmpTile.getGraphics() as PIXI.Graphics);\n        ANIMATION_TEXTURES_LIST[\"12\"][i].push(tmpTexture);\n        /*  let tmpSprite = new PIXI.Sprite(tmpTexture);\n          tmpSprite.x = 100 * (i + 9);\n          tmpSprite.y = 100 * j;\n         \n          _PIXI_APP.stage.addChild(tmpSprite);*/\n    }\n\n    //11\n    ANIMATION_TEXTURES_LIST[\"11\"][i] = [];\n    for (let j = 0; j < 11; ++j) {\n        ANIMATION_TEXTURES_LIST[\"11\"][i].push(ANIMATION_TEXTURES_LIST[\"12\"][i][j + 1]);\n    }\n\n    //10\n    ANIMATION_TEXTURES_LIST[\"10\"][i] = [];\n    for (let j = 0; j < 10; ++j) {\n        let t = j < 9 ? j + 1 : j + 2;\n        ANIMATION_TEXTURES_LIST[\"10\"][i].push(ANIMATION_TEXTURES_LIST[\"12\"][i][t]);\n    }\n    //9\n    ANIMATION_TEXTURES_LIST[\"9\"][i] = [];\n    for (let j = 0; j < 9; ++j) {\n        ANIMATION_TEXTURES_LIST[\"9\"][i].push(ANIMATION_TEXTURES_LIST[\"10\"][i][j + 1]);\n    }\n\n    //8\n    ANIMATION_TEXTURES_LIST[\"8\"][i] = [];\n    for (let j = 0; j < 8; ++j) {\n        ANIMATION_TEXTURES_LIST[\"8\"][i].push(ANIMATION_TEXTURES_LIST[\"9\"][i][j + 1]);\n\n    }\n    //7\n    ANIMATION_TEXTURES_LIST[\"7\"][i] = [];\n    for (let j = 0; j < 12; j++) {\n        if (j > 1) { j++; }\n        ANIMATION_TEXTURES_LIST[\"7\"][i].push(ANIMATION_TEXTURES_LIST[\"12\"][i][j]);\n    }\n    //6\n    ANIMATION_TEXTURES_LIST[\"6\"][i] = [];\n    for (let j = 0; j < 12; j += 2) {\n        ANIMATION_TEXTURES_LIST[\"6\"][i].push(ANIMATION_TEXTURES_LIST[\"12\"][i][j]);\n    }\n    //5\n    ANIMATION_TEXTURES_LIST[\"5\"][i] = [];\n    for (let j = 0; j < 10; j += 2) {\n        ANIMATION_TEXTURES_LIST[\"5\"][i].push(ANIMATION_TEXTURES_LIST[\"10\"][i][j]);\n\n    }\n\n    //4\n    ANIMATION_TEXTURES_LIST[\"4\"][i] = [];\n    for (let j = 0; j < 12; j += 3) {\n        ANIMATION_TEXTURES_LIST[\"4\"][i].push(ANIMATION_TEXTURES_LIST[\"12\"][i][j]);\n    }\n}\n\nfor (let i = -9; i < 10; ++i) {\n    let tempTile: PIXI.Graphics = PixiTile.createTileAsGraphics(MAIN_GRAPHICS_CONFIG, i);\n    TILE_TEXTURES_LIST[i] = _PIXI_APP.renderer.generateTexture(tempTile);\n    /**create tile textures for animations steps:\n     * 12 steps works for 6-4-3 steps (works for 11)\n     * 10 steps works for (5 as well as for 9)\n     * 8 steps (works for 7 too)     \n     */\n}\n\n\n/** INCREMENT THIS TO ANIMATE MORE TILES AND STRESS TEST PREFORMANCE */\nlet TOTAL_TILES = 500;\n\n\nlet tilesList: PixiTile[] = [];\n\nfor (let i = 0; i < TOTAL_TILES; ++i) {\n    tilesList.push(new PixiTile(MAIN_GRAPHICS_CONFIG, _PIXI_APP, TILE_TEXTURES_LIST, ANIMATION_TEXTURES_LIST, i % 9 + 1));\n\n    /** \n     * \n     *!!!!!! UNCOMMENT THE FOLLOWING LINE TO TEST PERFORMANCE USING GRAPHICS OBJECTS INSTEAD OF SPRITES!!!!!!! \n     * \n     * */\n    //tilesList[i].setGraphicsMode();\n\n    tilesList[i].moveTo(Math.random() * 500, Math.random() * 500);\n    _PIXI_APP.stage.addChild(tilesList[i].getObjectToUse() as PIXI.Graphics);\n\n}\n\n\n\n\n_PIXI_APP.ticker.stop();\n_PIXI_APP.ticker.update();\n\nlet globalCounter = 0;\n\nconst moveTilesGroup = (totalSteps: number): Promise<number> => {\n    return new Promise(function (resolve: any, reject: any) {\n        let stepsCounter = 0;\n        if (globalCounter >= 100) {\n            return reject(globalCounter);\n        }\n        globalCounter++;\n        for (let j = 0; j < TOTAL_TILES; ++j) {\n            tilesList[j].slideOfPrepareFn(Math.random() * 500 - 250, Math.random() * 500 - 250, totalSteps);\n            tilesList[j].prepareAnimateTint(Math.random() * 0xFFFFFF, 12);\n            tilesList[j].preapreAnimateDouble(12, j % 2 == 0 ? 1 : -1);\n            //tilesList[j].faceValue = globalCounter % 10;\n        }\n\n        let move = (t: number) => {\n            if (stepsCounter < totalSteps) {\n                for (let j = 0; j < TOTAL_TILES; ++j) {\n                    /**texting texture switch at every tick, commend the following line to stop it */\n                    // tilesList[j].faceValue = ~~(Math.random() * 10);\n                    tilesList[j].slideStep();\n                    tilesList[j].animateTintStep();\n                    tilesList[j].stepAnimateDouble();\n                }\n                stepsCounter++;\n                _PIXI_APP.ticker.update();\n                return requestAnimationFrame(move);\n            } else {\n                for (let j = 0; j < TOTAL_TILES; ++j) {\n                    tilesList[j].resetAllAnimationsData();\n                }\n                _PIXI_APP.ticker.update();\n                moveTilesGroup(totalSteps);\n                return resolve(totalSteps);\n            }\n        };\n\n        requestAnimationFrame(move);\n\n    });\n\n\n};\n/**moving cycle */\nmoveTilesGroup(12);\n\n\n\n"],"names":["PIXI.Application","PIXI.Container"],"mappings":"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"}