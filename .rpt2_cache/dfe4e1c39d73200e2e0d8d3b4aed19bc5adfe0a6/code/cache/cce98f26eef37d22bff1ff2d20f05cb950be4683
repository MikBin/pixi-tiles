{"code":"import { PixiTile } from \"./PixiTile\";\r\nimport * as PIXI from 'pixi.js';\r\nconst canvasContainer = document.getElementById(\"game-play\");\r\nconst _PIXI_APP = new PIXI.Application(1000, 1000, {\r\n    antialias: true,\r\n    transparent: true,\r\n    autoResize: true\r\n});\r\n_PIXI_APP.renderer.autoResize = true;\r\ncanvasContainer.appendChild(_PIXI_APP.view);\r\nconst torusContainer = new PIXI.Container();\r\n_PIXI_APP.stage.addChild(torusContainer);\r\ntorusContainer.x = 0;\r\ntorusContainer.y = 0;\r\ntorusContainer.interactiveChildren = false;\r\n_PIXI_APP.stage.interactive = true;\r\nconst tileFullSize = 100;\r\nconst MAIN_GRAPHICS_CONFIG = {\r\n    marginPercent: 0.01,\r\n    fontSizePercent: 0.6,\r\n    doubleFontSizePercent: 0.7,\r\n    borderPercent: 0.12,\r\n    doubleBorderPercent: 0.40,\r\n    _16_9_MOD: 0.6,\r\n    containerHeightModifier: 0.6,\r\n    sizeNormalizer: 1.04,\r\n    rows: 10,\r\n    cols: 10,\r\n    tileSize: tileFullSize,\r\n    tileFullSize: tileFullSize,\r\n    fontSize: 0,\r\n    biggerFontSize: 0,\r\n    tileBackColor: 0xFAFAFA,\r\n    defaultAlpha: 1,\r\n    strokeThicknessBase: 0,\r\n    strokeThicknessDouble: 0,\r\n    roundBorderFactor: 0,\r\n    doubleBorderFactor: 0,\r\n    tileNumberColors: [0xFAFAFA, 0x311B92, 0x0D47A1, 0x880E4F, 0x006064, 0xFF4500, 0x8B0000,\r\n        0x4B0082, 0x006400, 0x2F4F4F\r\n    ],\r\n    tileNumberBackColors: [0x0FAFAFA, 0x9781F8, 0x73ADFF, 0xEE74B5, 0x00dae4, 0xFFDE99,\r\n        0xff0c0c, 0x9403ff, 0x00e400, 0x95B5B5\r\n    ],\r\n    negativeNumberColor: 0x696969,\r\n    negativeBackNumberColor: 0xCCCCCC,\r\n    animationSteps: 12,\r\n    stepsFor_60_FPS: 12,\r\n    stepsLimit: 12,\r\n    margins: 0,\r\n    animationTiming: 200,\r\n    slideChangeThreshold: 20\r\n};\r\nMAIN_GRAPHICS_CONFIG.margins = Math.ceil(tileFullSize * MAIN_GRAPHICS_CONFIG.marginPercent);\r\nMAIN_GRAPHICS_CONFIG.tileSize = tileFullSize - 2 * MAIN_GRAPHICS_CONFIG.margins;\r\nMAIN_GRAPHICS_CONFIG.fontSize = Math.round((tileFullSize - 2 * MAIN_GRAPHICS_CONFIG.margins) * MAIN_GRAPHICS_CONFIG.fontSizePercent);\r\nMAIN_GRAPHICS_CONFIG.biggerFontSize = Math.round((tileFullSize - 2 * MAIN_GRAPHICS_CONFIG.margins) * MAIN_GRAPHICS_CONFIG.doubleFontSizePercent);\r\nMAIN_GRAPHICS_CONFIG.strokeThicknessDouble = MAIN_GRAPHICS_CONFIG.margins * 2.5;\r\nMAIN_GRAPHICS_CONFIG.roundBorderFactor = Math.ceil(tileFullSize * MAIN_GRAPHICS_CONFIG.borderPercent);\r\nMAIN_GRAPHICS_CONFIG.doubleBorderFactor = Math.ceil(tileFullSize * MAIN_GRAPHICS_CONFIG.doubleBorderPercent);\r\nconst TILE_TEXTURES_LIST = [];\r\nfor (let i = -9; i < 10; ++i) {\r\n    let tempTile = PixiTile.createTileAsGraphics(MAIN_GRAPHICS_CONFIG, i);\r\n    TILE_TEXTURES_LIST[i] = _PIXI_APP.renderer.generateTexture(tempTile);\r\n}\r\nlet TOTAL_TILES = 100;\r\nlet tilesList = [];\r\nfor (let i = 0; i < TOTAL_TILES; ++i) {\r\n    tilesList.push(new PixiTile(MAIN_GRAPHICS_CONFIG, _PIXI_APP, TILE_TEXTURES_LIST, i % 9 + 1));\r\n    tilesList[i].setSpriteMode();\r\n    tilesList[i].moveTo(Math.random() * 500, Math.random() * 500);\r\n    _PIXI_APP.stage.addChild(tilesList[i].getObjectToUse());\r\n}\r\n_PIXI_APP.ticker.stop();\r\n_PIXI_APP.ticker.update();\r\nlet globalCounter = 0;\r\nconst moveTilesGroup = (totalSteps) => {\r\n    return new Promise(function (resolve, reject) {\r\n        let stepsCounter = 0;\r\n        if (globalCounter >= 100) {\r\n            return reject(globalCounter);\r\n        }\r\n        globalCounter++;\r\n        for (let j = 0; j < TOTAL_TILES; ++j) {\r\n            tilesList[j].slideOfPrepareFn(Math.random() * 500 - 250, Math.random() * 500 - 250, totalSteps);\r\n            tilesList[j].faceValue = globalCounter % 10;\r\n        }\r\n        let move = (t) => {\r\n            if (stepsCounter < totalSteps) {\r\n                for (let j = 0; j < TOTAL_TILES; ++j) {\r\n                    tilesList[j].slideStep();\r\n                }\r\n                stepsCounter++;\r\n                _PIXI_APP.ticker.update();\r\n                return requestAnimationFrame(move);\r\n            }\r\n            else {\r\n                for (let j = 0; j < TOTAL_TILES; ++j) {\r\n                    tilesList[j].resetSlideData();\r\n                }\r\n                _PIXI_APP.ticker.update();\r\n                moveTilesGroup(totalSteps);\r\n                return resolve(totalSteps);\r\n            }\r\n        };\r\n        requestAnimationFrame(move);\r\n    });\r\n};\r\nmoveTilesGroup(12);\r\n//# sourceMappingURL=index.js.map","map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/index.ts\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"import { PixiTile } from \\\"./PixiTile\\\";\\nimport { graphicsConfiguration } from \\\"./interfaces\\\";\\nimport * as PIXI from 'pixi.js';\\n\\nconst canvasContainer = document.getElementById(\\\"game-play\\\");\\n\\nconst _PIXI_APP: PIXI.Application = new PIXI.Application(1000, 1000, {\\n    antialias: true,\\n    transparent: true,\\n    autoResize: true\\n});\\n\\n_PIXI_APP.renderer.autoResize = true;\\n\\ncanvasContainer.appendChild(_PIXI_APP.view);\\n\\nconst torusContainer: PIXI.Container = new PIXI.Container();\\n\\n_PIXI_APP.stage.addChild(torusContainer);\\ntorusContainer.x = 0;\\ntorusContainer.y = 0;\\n\\ntorusContainer.interactiveChildren = false;\\n\\n_PIXI_APP.stage.interactive = true;\\n\\nconst tileFullSize: number = 100;\\n\\nconst MAIN_GRAPHICS_CONFIG: graphicsConfiguration = {\\n    marginPercent: 0.01,\\n    fontSizePercent: 0.6,\\n    doubleFontSizePercent: 0.7,\\n    borderPercent: 0.12,\\n    doubleBorderPercent: 0.40,\\n    _16_9_MOD: 0.6,\\n    containerHeightModifier: 0.6,\\n    sizeNormalizer: 1.04,\\n    rows: 10,\\n    cols: 10,\\n    tileSize: tileFullSize,\\n    tileFullSize: tileFullSize,\\n    fontSize: 0,\\n    biggerFontSize: 0,\\n    tileBackColor: 0xFAFAFA,\\n    defaultAlpha: 1,\\n    strokeThicknessBase: 0,\\n    strokeThicknessDouble: 0,\\n    roundBorderFactor: 0,\\n    doubleBorderFactor: 0,\\n    tileNumberColors: [0xFAFAFA, 0x311B92, 0x0D47A1, 0x880E4F, 0x006064, 0xFF4500, 0x8B0000,\\n        0x4B0082, 0x006400, 0x2F4F4F\\n    ],\\n    tileNumberBackColors: [0x0FAFAFA, 0x9781F8, 0x73ADFF, 0xEE74B5, 0x00dae4, 0xFFDE99,\\n        0xff0c0c, 0x9403ff, 0x00e400, 0x95B5B5\\n    ],\\n    negativeNumberColor: 0x696969,\\n    negativeBackNumberColor: 0xCCCCCC,\\n    animationSteps: 12,\\n    stepsFor_60_FPS: 12,\\n    stepsLimit: 12,\\n    margins: 0,\\n    animationTiming: 200,\\n    slideChangeThreshold: 20\\n};\\n\\nMAIN_GRAPHICS_CONFIG.margins = Math.ceil(tileFullSize * MAIN_GRAPHICS_CONFIG.marginPercent);\\nMAIN_GRAPHICS_CONFIG.tileSize = tileFullSize - 2 * MAIN_GRAPHICS_CONFIG.margins;\\nMAIN_GRAPHICS_CONFIG.fontSize = Math.round((tileFullSize - 2 * MAIN_GRAPHICS_CONFIG.margins) * MAIN_GRAPHICS_CONFIG.fontSizePercent);\\nMAIN_GRAPHICS_CONFIG.biggerFontSize = Math.round((tileFullSize - 2 * MAIN_GRAPHICS_CONFIG.margins) * MAIN_GRAPHICS_CONFIG.doubleFontSizePercent);\\nMAIN_GRAPHICS_CONFIG.strokeThicknessDouble = MAIN_GRAPHICS_CONFIG.margins * 2.5;\\nMAIN_GRAPHICS_CONFIG.roundBorderFactor = Math.ceil(tileFullSize * MAIN_GRAPHICS_CONFIG.borderPercent);\\nMAIN_GRAPHICS_CONFIG.doubleBorderFactor = Math.ceil(tileFullSize * MAIN_GRAPHICS_CONFIG.doubleBorderPercent);\\n\\nconst TILE_TEXTURES_LIST: PIXI.Texture[] = [];\\n\\nfor (let i = -9; i < 10; ++i) {\\n    let tempTile: PIXI.Graphics = PixiTile.createTileAsGraphics(MAIN_GRAPHICS_CONFIG, i);\\n    TILE_TEXTURES_LIST[i] = _PIXI_APP.renderer.generateTexture(tempTile);\\n}\\n\\n\\n/** INCREMENT THIS TO ANIMATE MORE TILES AND STRESS TEST PREFORMANCE */\\nlet TOTAL_TILES = 100;\\n\\n\\nlet tilesList: PixiTile[] = [];\\n\\nfor (let i = 0; i < TOTAL_TILES; ++i) {\\n    tilesList.push(new PixiTile(MAIN_GRAPHICS_CONFIG, _PIXI_APP, TILE_TEXTURES_LIST, i % 9 + 1));\\n\\n    /** \\n     * \\n     *!!!!!! COMMENT THE FOLLOWING LINE TO TEST PERFORMANCE USING GRAPHICS OBJECTS INSTEAD OF SPRITES!!!!!!! \\n     * \\n     * */\\n    tilesList[i].setSpriteMode();\\n\\n\\n\\n    tilesList[i].moveTo(Math.random() * 500, Math.random() * 500);\\n    _PIXI_APP.stage.addChild(tilesList[i].getObjectToUse());\\n\\n}\\n\\n\\n_PIXI_APP.ticker.stop();\\n_PIXI_APP.ticker.update();\\n\\nlet globalCounter = 0;\\n\\nconst moveTilesGroup = (totalSteps: number): Promise<number> => {\\n    return new Promise(function (resolve: any, reject: any) {\\n        let stepsCounter = 0;\\n        if (globalCounter >= 100) {\\n            return reject(globalCounter);\\n        }\\n        globalCounter++;\\n        for (let j = 0; j < TOTAL_TILES; ++j) {\\n            tilesList[j].slideOfPrepareFn(Math.random() * 500 - 250, Math.random() * 500 - 250, totalSteps);\\n            tilesList[j].faceValue = globalCounter % 10;\\n        }\\n\\n        let move = (t: number) => {\\n            if (stepsCounter < totalSteps) {\\n                for (let j = 0; j < TOTAL_TILES; ++j) {\\n                    tilesList[j].slideStep();\\n                }\\n                stepsCounter++;\\n                _PIXI_APP.ticker.update();\\n                return requestAnimationFrame(move);\\n            } else {\\n                for (let j = 0; j < TOTAL_TILES; ++j) {\\n                    tilesList[j].resetSlideData();\\n                }\\n                _PIXI_APP.ticker.update();\\n                moveTilesGroup(totalSteps);\\n                return resolve(totalSteps);\\n            }\\n        };\\n\\n        requestAnimationFrame(move);\\n\\n    });\\n\\n\\n};\\n/**moving cycle */\\nmoveTilesGroup(12);\\n\\n\\n\\n\"]}"}
